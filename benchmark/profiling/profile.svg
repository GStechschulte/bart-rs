<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2410" onload="init(evt)" viewBox="0 0 1200 2410" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2410" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">py-spy record -o profile.svg -- python benchmark/examples/bart_examples.py --model coal</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2399.00"> </text><svg id="frames" x="10" width="1180" total_samples="6164"><g><title>astep (pymc_bart/pgbart.py:151) (5,603 samples, 90.90%)</title><rect x="0.2758%" y="196" width="90.8988%" height="15" fill="rgb(227,0,7)" fg:x="17" fg:w="5603"/><text x="0.5258%" y="206.50">astep (pymc_bart/pgbart.py:151)</text></g><g><title>step (pymc/step_methods/arraystep.py:116) (5,607 samples, 90.96%)</title><rect x="0.2433%" y="180" width="90.9637%" height="15" fill="rgb(217,0,24)" fg:x="15" fg:w="5607"/><text x="0.4933%" y="190.50">step (pymc/step_methods/arraystep.py:116)</text></g><g><title>_iter_sample (pymc/sampling/mcmc.py:1223) (5,617 samples, 91.13%)</title><rect x="0.1785%" y="164" width="91.1259%" height="15" fill="rgb(221,193,54)" fg:x="11" fg:w="5617"/><text x="0.4285%" y="174.50">_iter_sample (pymc/sampling/mcmc.py:1223)</text></g><g><title>_sample (pymc/sampling/mcmc.py:1157) (5,624 samples, 91.24%)</title><rect x="0.1785%" y="148" width="91.2395%" height="15" fill="rgb(248,212,6)" fg:x="11" fg:w="5624"/><text x="0.4285%" y="158.50">_sample (pymc/sampling/mcmc.py:1157)</text></g><g><title>_iter_sample (pymc/sampling/mcmc.py:1224) (7 samples, 0.11%)</title><rect x="91.3043%" y="164" width="0.1136%" height="15" fill="rgb(208,68,35)" fg:x="5628" fg:w="7"/><text x="91.5543%" y="174.50"></text></g><g><title>sample (pymc/sampling/mcmc.py:929) (5,628 samples, 91.30%)</title><rect x="0.1460%" y="116" width="91.3043%" height="15" fill="rgb(232,128,0)" fg:x="9" fg:w="5628"/><text x="0.3960%" y="126.50">sample (pymc/sampling/mcmc.py:929)</text></g><g><title>_sample_many (pymc/sampling/mcmc.py:1072) (5,628 samples, 91.30%)</title><rect x="0.1460%" y="132" width="91.3043%" height="15" fill="rgb(207,160,47)" fg:x="9" fg:w="5628"/><text x="0.3960%" y="142.50">_sample_many (pymc/sampling/mcmc.py:1072)</text></g><g><title>run_pass (numba/core/typed_passes.py:468) (12 samples, 0.19%)</title><rect x="91.5477%" y="580" width="0.1947%" height="15" fill="rgb(228,23,34)" fg:x="5643" fg:w="12"/><text x="91.7977%" y="590.50"></text></g><g><title>lower (numba/core/lowering.py:187) (12 samples, 0.19%)</title><rect x="91.5477%" y="596" width="0.1947%" height="15" fill="rgb(218,30,26)" fg:x="5643" fg:w="12"/><text x="91.7977%" y="606.50"></text></g><g><title>lower_normal_function (numba/core/lowering.py:226) (12 samples, 0.19%)</title><rect x="91.5477%" y="612" width="0.1947%" height="15" fill="rgb(220,122,19)" fg:x="5643" fg:w="12"/><text x="91.7977%" y="622.50"></text></g><g><title>lower_function_body (numba/core/lowering.py:256) (12 samples, 0.19%)</title><rect x="91.5477%" y="628" width="0.1947%" height="15" fill="rgb(250,228,42)" fg:x="5643" fg:w="12"/><text x="91.7977%" y="638.50"></text></g><g><title>lower_block (numba/core/lowering.py:270) (12 samples, 0.19%)</title><rect x="91.5477%" y="644" width="0.1947%" height="15" fill="rgb(240,193,28)" fg:x="5643" fg:w="12"/><text x="91.7977%" y="654.50"></text></g><g><title>lower_inst (numba/core/lowering.py:448) (12 samples, 0.19%)</title><rect x="91.5477%" y="660" width="0.1947%" height="15" fill="rgb(216,20,37)" fg:x="5643" fg:w="12"/><text x="91.7977%" y="670.50"></text></g><g><title>lower_assign (numba/core/lowering.py:660) (12 samples, 0.19%)</title><rect x="91.5477%" y="676" width="0.1947%" height="15" fill="rgb(206,188,39)" fg:x="5643" fg:w="12"/><text x="91.7977%" y="686.50"></text></g><g><title>lower_expr (numba/core/lowering.py:1172) (12 samples, 0.19%)</title><rect x="91.5477%" y="692" width="0.1947%" height="15" fill="rgb(217,207,13)" fg:x="5643" fg:w="12"/><text x="91.7977%" y="702.50"></text></g><g><title>lower_binop (numba/core/lowering.py:793) (11 samples, 0.18%)</title><rect x="91.5639%" y="708" width="0.1785%" height="15" fill="rgb(231,73,38)" fg:x="5644" fg:w="11"/><text x="91.8139%" y="718.50"></text></g><g><title>__call__ (numba/core/base.py:1190) (11 samples, 0.18%)</title><rect x="91.5639%" y="724" width="0.1785%" height="15" fill="rgb(225,20,46)" fg:x="5644" fg:w="11"/><text x="91.8139%" y="734.50"></text></g><g><title>wrapper (numba/core/base.py:1220) (11 samples, 0.18%)</title><rect x="91.5639%" y="740" width="0.1785%" height="15" fill="rgb(210,31,41)" fg:x="5644" fg:w="11"/><text x="91.8139%" y="750.50"></text></g><g><title>int_power_impl (numba/cpython/numbers.py:245) (11 samples, 0.18%)</title><rect x="91.5639%" y="756" width="0.1785%" height="15" fill="rgb(221,200,47)" fg:x="5644" fg:w="11"/><text x="91.8139%" y="766.50"></text></g><g><title>compile_internal (numba/core/base.py:881) (11 samples, 0.18%)</title><rect x="91.5639%" y="772" width="0.1785%" height="15" fill="rgb(226,26,5)" fg:x="5644" fg:w="11"/><text x="91.8139%" y="782.50"></text></g><g><title>compile_subroutine (numba/core/base.py:866) (11 samples, 0.18%)</title><rect x="91.5639%" y="788" width="0.1785%" height="15" fill="rgb(249,33,26)" fg:x="5644" fg:w="11"/><text x="91.8139%" y="798.50"></text></g><g><title>_compile_subroutine_no_cache (numba/core/base.py:837) (11 samples, 0.18%)</title><rect x="91.5639%" y="804" width="0.1785%" height="15" fill="rgb(235,183,28)" fg:x="5644" fg:w="11"/><text x="91.8139%" y="814.50"></text></g><g><title>compile_internal (numba/core/compiler.py:818) (11 samples, 0.18%)</title><rect x="91.5639%" y="820" width="0.1785%" height="15" fill="rgb(221,5,38)" fg:x="5644" fg:w="11"/><text x="91.8139%" y="830.50"></text></g><g><title>compile_extra (numba/core/compiler.py:438) (11 samples, 0.18%)</title><rect x="91.5639%" y="836" width="0.1785%" height="15" fill="rgb(247,18,42)" fg:x="5644" fg:w="11"/><text x="91.8139%" y="846.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:506) (11 samples, 0.18%)</title><rect x="91.5639%" y="852" width="0.1785%" height="15" fill="rgb(241,131,45)" fg:x="5644" fg:w="11"/><text x="91.8139%" y="862.50"></text></g><g><title>_compile_core (numba/core/compiler.py:472) (11 samples, 0.18%)</title><rect x="91.5639%" y="868" width="0.1785%" height="15" fill="rgb(249,31,29)" fg:x="5644" fg:w="11"/><text x="91.8139%" y="878.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (11 samples, 0.18%)</title><rect x="91.5639%" y="884" width="0.1785%" height="15" fill="rgb(225,111,53)" fg:x="5644" fg:w="11"/><text x="91.8139%" y="894.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (11 samples, 0.18%)</title><rect x="91.5639%" y="900" width="0.1785%" height="15" fill="rgb(238,160,17)" fg:x="5644" fg:w="11"/><text x="91.8139%" y="910.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (11 samples, 0.18%)</title><rect x="91.5639%" y="916" width="0.1785%" height="15" fill="rgb(214,148,48)" fg:x="5644" fg:w="11"/><text x="91.8139%" y="926.50"></text></g><g><title>check (numba/core/compiler_machinery.py:273) (11 samples, 0.18%)</title><rect x="91.5639%" y="932" width="0.1785%" height="15" fill="rgb(232,36,49)" fg:x="5644" fg:w="11"/><text x="91.8139%" y="942.50"></text></g><g><title>run_convergence_checks (pymc/stats/convergence.py:106) (16 samples, 0.26%)</title><rect x="91.5152%" y="148" width="0.2596%" height="15" fill="rgb(209,103,24)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="158.50"></text></g><g><title>ess (arviz/stats/diagnostics.py:219) (16 samples, 0.26%)</title><rect x="91.5152%" y="164" width="0.2596%" height="15" fill="rgb(229,88,8)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="174.50"></text></g><g><title>wrapper (arviz/utils.py:762) (16 samples, 0.26%)</title><rect x="91.5152%" y="180" width="0.2596%" height="15" fill="rgb(213,181,19)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="190.50"></text></g><g><title>wrap_xarray_ufunc (arviz/stats/stats_utils.py:240) (16 samples, 0.26%)</title><rect x="91.5152%" y="196" width="0.2596%" height="15" fill="rgb(254,191,54)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="206.50"></text></g><g><title>apply_ufunc (xarray/core/computation.py:1252) (16 samples, 0.26%)</title><rect x="91.5152%" y="212" width="0.2596%" height="15" fill="rgb(241,83,37)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="222.50"></text></g><g><title>apply_dataset_vfunc (xarray/core/computation.py:523) (16 samples, 0.26%)</title><rect x="91.5152%" y="228" width="0.2596%" height="15" fill="rgb(233,36,39)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="238.50"></text></g><g><title>apply_dict_of_variables_vfunc (xarray/core/computation.py:447) (16 samples, 0.26%)</title><rect x="91.5152%" y="244" width="0.2596%" height="15" fill="rgb(226,3,54)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="254.50"></text></g><g><title>apply_variable_ufunc (xarray/core/computation.py:818) (16 samples, 0.26%)</title><rect x="91.5152%" y="260" width="0.2596%" height="15" fill="rgb(245,192,40)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="270.50"></text></g><g><title>_ufunc (arviz/stats/stats_utils.py:138) (16 samples, 0.26%)</title><rect x="91.5152%" y="276" width="0.2596%" height="15" fill="rgb(238,167,29)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="286.50"></text></g><g><title>_ess_bulk (arviz/stats/diagnostics.py:710) (16 samples, 0.26%)</title><rect x="91.5152%" y="292" width="0.2596%" height="15" fill="rgb(232,182,51)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="302.50"></text></g><g><title>_ess (arviz/stats/diagnostics.py:665) (16 samples, 0.26%)</title><rect x="91.5152%" y="308" width="0.2596%" height="15" fill="rgb(231,60,39)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="318.50"></text></g><g><title>_numba_var (arviz/utils.py:371) (16 samples, 0.26%)</title><rect x="91.5152%" y="324" width="0.2596%" height="15" fill="rgb(208,69,12)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="334.50"></text></g><g><title>stats_variance_2d (arviz/stats/stats_utils.py:530) (16 samples, 0.26%)</title><rect x="91.5152%" y="340" width="0.2596%" height="15" fill="rgb(235,93,37)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="350.50"></text></g><g><title>__call__ (arviz/utils.py:205) (16 samples, 0.26%)</title><rect x="91.5152%" y="356" width="0.2596%" height="15" fill="rgb(213,116,39)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="366.50"></text></g><g><title>_compile_for_args (numba/core/dispatcher.py:375) (16 samples, 0.26%)</title><rect x="91.5152%" y="372" width="0.2596%" height="15" fill="rgb(222,207,29)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="382.50"></text></g><g><title>compile (numba/core/dispatcher.py:905) (16 samples, 0.26%)</title><rect x="91.5152%" y="388" width="0.2596%" height="15" fill="rgb(206,96,30)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="398.50"></text></g><g><title>compile (numba/core/dispatcher.py:80) (16 samples, 0.26%)</title><rect x="91.5152%" y="404" width="0.2596%" height="15" fill="rgb(218,138,4)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="414.50"></text></g><g><title>_compile_cached (numba/core/dispatcher.py:94) (16 samples, 0.26%)</title><rect x="91.5152%" y="420" width="0.2596%" height="15" fill="rgb(250,191,14)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="430.50"></text></g><g><title>_compile_core (numba/core/dispatcher.py:107) (16 samples, 0.26%)</title><rect x="91.5152%" y="436" width="0.2596%" height="15" fill="rgb(239,60,40)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="446.50"></text></g><g><title>compile_extra (numba/core/compiler.py:744) (16 samples, 0.26%)</title><rect x="91.5152%" y="452" width="0.2596%" height="15" fill="rgb(206,27,48)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="462.50"></text></g><g><title>compile_extra (numba/core/compiler.py:438) (16 samples, 0.26%)</title><rect x="91.5152%" y="468" width="0.2596%" height="15" fill="rgb(225,35,8)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="478.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:506) (16 samples, 0.26%)</title><rect x="91.5152%" y="484" width="0.2596%" height="15" fill="rgb(250,213,24)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="494.50"></text></g><g><title>_compile_core (numba/core/compiler.py:472) (16 samples, 0.26%)</title><rect x="91.5152%" y="500" width="0.2596%" height="15" fill="rgb(247,123,22)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="510.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (16 samples, 0.26%)</title><rect x="91.5152%" y="516" width="0.2596%" height="15" fill="rgb(231,138,38)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="526.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (16 samples, 0.26%)</title><rect x="91.5152%" y="532" width="0.2596%" height="15" fill="rgb(231,145,46)" fg:x="5641" fg:w="16"/><text x="91.7652%" y="542.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (15 samples, 0.24%)</title><rect x="91.5315%" y="548" width="0.2433%" height="15" fill="rgb(251,118,11)" fg:x="5642" fg:w="15"/><text x="91.7815%" y="558.50"></text></g><g><title>check (numba/core/compiler_machinery.py:273) (15 samples, 0.24%)</title><rect x="91.5315%" y="564" width="0.2433%" height="15" fill="rgb(217,147,25)" fg:x="5642" fg:w="15"/><text x="91.7815%" y="574.50"></text></g><g><title>test_coal (bart_examples.py:79) (5,657 samples, 91.77%)</title><rect x="0.0649%" y="100" width="91.7748%" height="15" fill="rgb(247,81,37)" fg:x="4" fg:w="5657"/><text x="0.3149%" y="110.50">test_coal (bart_examples.py:79)</text></g><g><title>sample (pymc/sampling/mcmc.py:935) (24 samples, 0.39%)</title><rect x="91.4504%" y="116" width="0.3894%" height="15" fill="rgb(209,12,38)" fg:x="5637" fg:w="24"/><text x="91.7004%" y="126.50"></text></g><g><title>_sample_return (pymc/sampling/mcmc.py:1007) (20 samples, 0.32%)</title><rect x="91.5152%" y="132" width="0.3245%" height="15" fill="rgb(227,1,9)" fg:x="5641" fg:w="20"/><text x="91.7652%" y="142.50"></text></g><g><title>process_node (pytensor/graph/rewriting/basic.py:1913) (18 samples, 0.29%)</title><rect x="91.9046%" y="324" width="0.2920%" height="15" fill="rgb(248,47,43)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="334.50"></text></g><g><title>transform (pytensor/graph/rewriting/basic.py:1626) (18 samples, 0.29%)</title><rect x="91.9046%" y="340" width="0.2920%" height="15" fill="rgb(221,10,30)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="350.50"></text></g><g><title>__call__ (multipledispatch/dispatcher.py:279) (18 samples, 0.29%)</title><rect x="91.9046%" y="356" width="0.2920%" height="15" fill="rgb(210,229,1)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="366.50"></text></g><g><title>unify_NoMap (unification/core.py:254) (18 samples, 0.29%)</title><rect x="91.9046%" y="372" width="0.2920%" height="15" fill="rgb(222,148,37)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="382.50"></text></g><g><title>__call__ (multipledispatch/dispatcher.py:279) (18 samples, 0.29%)</title><rect x="91.9046%" y="388" width="0.2920%" height="15" fill="rgb(234,67,33)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="398.50"></text></g><g><title>unify (unification/core.py:249) (18 samples, 0.29%)</title><rect x="91.9046%" y="404" width="0.2920%" height="15" fill="rgb(247,98,35)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="414.50"></text></g><g><title>stream_eval (unification/core.py:45) (18 samples, 0.29%)</title><rect x="91.9046%" y="420" width="0.2920%" height="15" fill="rgb(247,138,52)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="430.50"></text></g><g><title>_unify_Variable_ExpressionTuple (pytensor/graph/rewriting/unify.py:208) (18 samples, 0.29%)</title><rect x="91.9046%" y="436" width="0.2920%" height="15" fill="rgb(213,79,30)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="446.50"></text></g><g><title>__call__ (multipledispatch/dispatcher.py:279) (18 samples, 0.29%)</title><rect x="91.9046%" y="452" width="0.2920%" height="15" fill="rgb(246,177,23)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="462.50"></text></g><g><title>etuplize (etuples/dispatch.py:193) (18 samples, 0.29%)</title><rect x="91.9046%" y="468" width="0.2920%" height="15" fill="rgb(230,62,27)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="478.50"></text></g><g><title>trampoline_eval (etuples/core.py:42) (18 samples, 0.29%)</title><rect x="91.9046%" y="484" width="0.2920%" height="15" fill="rgb(216,154,8)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="494.50"></text></g><g><title>etuplize_step (etuples/dispatch.py:164) (18 samples, 0.29%)</title><rect x="91.9046%" y="500" width="0.2920%" height="15" fill="rgb(244,35,45)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="510.50"></text></g><g><title>__call__ (multipledispatch/dispatcher.py:279) (18 samples, 0.29%)</title><rect x="91.9046%" y="516" width="0.2920%" height="15" fill="rgb(251,115,12)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="526.50"></text></g><g><title>rator (etuples/dispatch.py:76) (18 samples, 0.29%)</title><rect x="91.9046%" y="532" width="0.2920%" height="15" fill="rgb(240,54,50)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="542.50"></text></g><g><title>car (cons/core.py:206) (18 samples, 0.29%)</title><rect x="91.9046%" y="548" width="0.2920%" height="15" fill="rgb(233,84,52)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="558.50"></text></g><g><title>__call__ (multipledispatch/dispatcher.py:271) (18 samples, 0.29%)</title><rect x="91.9046%" y="564" width="0.2920%" height="15" fill="rgb(207,117,47)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="574.50"></text></g><g><title>dispatch (multipledispatch/dispatcher.py:330) (18 samples, 0.29%)</title><rect x="91.9046%" y="580" width="0.2920%" height="15" fill="rgb(249,43,39)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="590.50"></text></g><g><title>dispatch_iter (multipledispatch/dispatcher.py:336) (18 samples, 0.29%)</title><rect x="91.9046%" y="596" width="0.2920%" height="15" fill="rgb(209,38,44)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="606.50"></text></g><g><title>ordering (multipledispatch/dispatcher.py:257) (18 samples, 0.29%)</title><rect x="91.9046%" y="612" width="0.2920%" height="15" fill="rgb(236,212,23)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="622.50"></text></g><g><title>reorder (multipledispatch/dispatcher.py:260) (18 samples, 0.29%)</title><rect x="91.9046%" y="628" width="0.2920%" height="15" fill="rgb(242,79,21)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="638.50"></text></g><g><title>ordering (multipledispatch/conflict.py:115) (18 samples, 0.29%)</title><rect x="91.9046%" y="644" width="0.2920%" height="15" fill="rgb(211,96,35)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="654.50"></text></g><g><title>edge (multipledispatch/conflict.py:104) (18 samples, 0.29%)</title><rect x="91.9046%" y="660" width="0.2920%" height="15" fill="rgb(253,215,40)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="670.50"></text></g><g><title>supercedes (multipledispatch/conflict.py:15) (18 samples, 0.29%)</title><rect x="91.9046%" y="676" width="0.2920%" height="15" fill="rgb(211,81,21)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="686.50"></text></g><g><title>__subclasscheck__ (&lt;frozen abc&gt;:123) (18 samples, 0.29%)</title><rect x="91.9046%" y="692" width="0.2920%" height="15" fill="rgb(208,190,38)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="702.50"></text></g><g><title>__subclasscheck__ (&lt;frozen abc&gt;:123) (18 samples, 0.29%)</title><rect x="91.9046%" y="708" width="0.2920%" height="15" fill="rgb(235,213,38)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="718.50"></text></g><g><title>__subclasscheck__ (&lt;frozen abc&gt;:123) (18 samples, 0.29%)</title><rect x="91.9046%" y="724" width="0.2920%" height="15" fill="rgb(237,122,38)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="734.50"></text></g><g><title>__subclasscheck__ (&lt;frozen abc&gt;:123) (18 samples, 0.29%)</title><rect x="91.9046%" y="740" width="0.2920%" height="15" fill="rgb(244,218,35)" fg:x="5665" fg:w="18"/><text x="92.1546%" y="750.50"></text></g><g><title>__subclasscheck__ (&lt;frozen abc&gt;:123) (16 samples, 0.26%)</title><rect x="91.9371%" y="756" width="0.2596%" height="15" fill="rgb(240,68,47)" fg:x="5667" fg:w="16"/><text x="92.1871%" y="766.50"></text></g><g><title>apply (pytensor/graph/rewriting/basic.py:2418) (19 samples, 0.31%)</title><rect x="91.9046%" y="308" width="0.3082%" height="15" fill="rgb(210,16,53)" fg:x="5665" fg:w="19"/><text x="92.1546%" y="318.50"></text></g><g><title>orig_function (pytensor/compile/function/types.py:1757) (22 samples, 0.36%)</title><rect x="91.8722%" y="212" width="0.3569%" height="15" fill="rgb(235,124,12)" fg:x="5663" fg:w="22"/><text x="92.1222%" y="222.50"></text></g><g><title>__init__ (pytensor/compile/function/types.py:1526) (22 samples, 0.36%)</title><rect x="91.8722%" y="228" width="0.3569%" height="15" fill="rgb(224,169,11)" fg:x="5663" fg:w="22"/><text x="92.1222%" y="238.50"></text></g><g><title>prepare_fgraph (pytensor/compile/function/types.py:1414) (22 samples, 0.36%)</title><rect x="91.8722%" y="244" width="0.3569%" height="15" fill="rgb(250,166,2)" fg:x="5663" fg:w="22"/><text x="92.1222%" y="254.50"></text></g><g><title>__call__ (pytensor/graph/rewriting/basic.py:125) (22 samples, 0.36%)</title><rect x="91.8722%" y="260" width="0.3569%" height="15" fill="rgb(242,216,29)" fg:x="5663" fg:w="22"/><text x="92.1222%" y="270.50"></text></g><g><title>rewrite (pytensor/graph/rewriting/basic.py:121) (20 samples, 0.32%)</title><rect x="91.9046%" y="276" width="0.3245%" height="15" fill="rgb(230,116,27)" fg:x="5665" fg:w="20"/><text x="92.1546%" y="286.50"></text></g><g><title>apply (pytensor/graph/rewriting/basic.py:291) (20 samples, 0.32%)</title><rect x="91.9046%" y="292" width="0.3245%" height="15" fill="rgb(228,99,48)" fg:x="5665" fg:w="20"/><text x="92.1546%" y="302.50"></text></g><g><title>run_pass (numba/core/typed_passes.py:112) (8 samples, 0.13%)</title><rect x="92.3102%" y="1908" width="0.1298%" height="15" fill="rgb(253,11,6)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="1918.50"></text></g><g><title>type_inference_stage (numba/core/typed_passes.py:93) (8 samples, 0.13%)</title><rect x="92.3102%" y="1924" width="0.1298%" height="15" fill="rgb(247,143,39)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="1934.50"></text></g><g><title>propagate (numba/core/typeinfer.py:1083) (8 samples, 0.13%)</title><rect x="92.3102%" y="1940" width="0.1298%" height="15" fill="rgb(236,97,10)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="1950.50"></text></g><g><title>propagate (numba/core/typeinfer.py:160) (8 samples, 0.13%)</title><rect x="92.3102%" y="1956" width="0.1298%" height="15" fill="rgb(233,208,19)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="1966.50"></text></g><g><title>__call__ (numba/core/typeinfer.py:583) (8 samples, 0.13%)</title><rect x="92.3102%" y="1972" width="0.1298%" height="15" fill="rgb(216,164,2)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="1982.50"></text></g><g><title>resolve (numba/core/typeinfer.py:606) (8 samples, 0.13%)</title><rect x="92.3102%" y="1988" width="0.1298%" height="15" fill="rgb(220,129,5)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="1998.50"></text></g><g><title>resolve_call (numba/core/typeinfer.py:1577) (8 samples, 0.13%)</title><rect x="92.3102%" y="2004" width="0.1298%" height="15" fill="rgb(242,17,10)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2014.50"></text></g><g><title>resolve_function_type (numba/core/typing/context.py:196) (8 samples, 0.13%)</title><rect x="92.3102%" y="2020" width="0.1298%" height="15" fill="rgb(242,107,0)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2030.50"></text></g><g><title>_resolve_user_function_type (numba/core/typing/context.py:248) (8 samples, 0.13%)</title><rect x="92.3102%" y="2036" width="0.1298%" height="15" fill="rgb(251,28,31)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2046.50"></text></g><g><title>get_call_type (numba/core/types/functions.py:400) (8 samples, 0.13%)</title><rect x="92.3102%" y="2052" width="0.1298%" height="15" fill="rgb(233,223,10)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2062.50"></text></g><g><title>apply (numba/core/typing/templates.py:350) (8 samples, 0.13%)</title><rect x="92.3102%" y="2068" width="0.1298%" height="15" fill="rgb(215,21,27)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2078.50"></text></g><g><title>generic (numba/core/typing/templates.py:1132) (8 samples, 0.13%)</title><rect x="92.3102%" y="2084" width="0.1298%" height="15" fill="rgb(232,23,21)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2094.50"></text></g><g><title>_get_signature (numba/core/typing/templates.py:1077) (8 samples, 0.13%)</title><rect x="92.3102%" y="2100" width="0.1298%" height="15" fill="rgb(244,5,23)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2110.50"></text></g><g><title>get_call_type (numba/core/types/functions.py:308) (8 samples, 0.13%)</title><rect x="92.3102%" y="2116" width="0.1298%" height="15" fill="rgb(226,81,46)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2126.50"></text></g><g><title>apply (numba/core/typing/templates.py:350) (8 samples, 0.13%)</title><rect x="92.3102%" y="2132" width="0.1298%" height="15" fill="rgb(247,70,30)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2142.50"></text></g><g><title>generic (numba/core/typing/templates.py:613) (8 samples, 0.13%)</title><rect x="92.3102%" y="2148" width="0.1298%" height="15" fill="rgb(212,68,19)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2158.50"></text></g><g><title>_get_impl (numba/core/typing/templates.py:712) (8 samples, 0.13%)</title><rect x="92.3102%" y="2164" width="0.1298%" height="15" fill="rgb(240,187,13)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2174.50"></text></g><g><title>_build_impl (numba/core/typing/templates.py:816) (8 samples, 0.13%)</title><rect x="92.3102%" y="2180" width="0.1298%" height="15" fill="rgb(223,113,26)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2190.50"></text></g><g><title>get_call_type (numba/core/types/functions.py:541) (8 samples, 0.13%)</title><rect x="92.3102%" y="2196" width="0.1298%" height="15" fill="rgb(206,192,2)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2206.50"></text></g><g><title>get_call_template (numba/core/dispatcher.py:318) (8 samples, 0.13%)</title><rect x="92.3102%" y="2212" width="0.1298%" height="15" fill="rgb(241,108,4)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2222.50"></text></g><g><title>compile (numba/core/dispatcher.py:905) (8 samples, 0.13%)</title><rect x="92.3102%" y="2228" width="0.1298%" height="15" fill="rgb(247,173,49)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2238.50"></text></g><g><title>compile (numba/core/dispatcher.py:80) (8 samples, 0.13%)</title><rect x="92.3102%" y="2244" width="0.1298%" height="15" fill="rgb(224,114,35)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2254.50"></text></g><g><title>_compile_cached (numba/core/dispatcher.py:94) (8 samples, 0.13%)</title><rect x="92.3102%" y="2260" width="0.1298%" height="15" fill="rgb(245,159,27)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2270.50"></text></g><g><title>_compile_core (numba/core/dispatcher.py:107) (8 samples, 0.13%)</title><rect x="92.3102%" y="2276" width="0.1298%" height="15" fill="rgb(245,172,44)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2286.50"></text></g><g><title>compile_extra (numba/core/compiler.py:744) (8 samples, 0.13%)</title><rect x="92.3102%" y="2292" width="0.1298%" height="15" fill="rgb(236,23,11)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2302.50"></text></g><g><title>compile_extra (numba/core/compiler.py:438) (8 samples, 0.13%)</title><rect x="92.3102%" y="2308" width="0.1298%" height="15" fill="rgb(205,117,38)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2318.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:506) (8 samples, 0.13%)</title><rect x="92.3102%" y="2324" width="0.1298%" height="15" fill="rgb(237,72,25)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2334.50"></text></g><g><title>_compile_core (numba/core/compiler.py:472) (8 samples, 0.13%)</title><rect x="92.3102%" y="2340" width="0.1298%" height="15" fill="rgb(244,70,9)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2350.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (8 samples, 0.13%)</title><rect x="92.3102%" y="2356" width="0.1298%" height="15" fill="rgb(217,125,39)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2366.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (8 samples, 0.13%)</title><rect x="92.3102%" y="2372" width="0.1298%" height="15" fill="rgb(235,36,10)" fg:x="5690" fg:w="8"/><text x="92.5602%" y="2382.50"></text></g><g><title>_compile_subroutine_no_cache (numba/core/base.py:837) (11 samples, 0.18%)</title><rect x="92.2777%" y="1764" width="0.1785%" height="15" fill="rgb(251,123,47)" fg:x="5688" fg:w="11"/><text x="92.5277%" y="1774.50"></text></g><g><title>compile_internal (numba/core/compiler.py:818) (11 samples, 0.18%)</title><rect x="92.2777%" y="1780" width="0.1785%" height="15" fill="rgb(221,13,13)" fg:x="5688" fg:w="11"/><text x="92.5277%" y="1790.50"></text></g><g><title>compile_extra (numba/core/compiler.py:438) (11 samples, 0.18%)</title><rect x="92.2777%" y="1796" width="0.1785%" height="15" fill="rgb(238,131,9)" fg:x="5688" fg:w="11"/><text x="92.5277%" y="1806.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:506) (11 samples, 0.18%)</title><rect x="92.2777%" y="1812" width="0.1785%" height="15" fill="rgb(211,50,8)" fg:x="5688" fg:w="11"/><text x="92.5277%" y="1822.50"></text></g><g><title>_compile_core (numba/core/compiler.py:472) (11 samples, 0.18%)</title><rect x="92.2777%" y="1828" width="0.1785%" height="15" fill="rgb(245,182,24)" fg:x="5688" fg:w="11"/><text x="92.5277%" y="1838.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (11 samples, 0.18%)</title><rect x="92.2777%" y="1844" width="0.1785%" height="15" fill="rgb(242,14,37)" fg:x="5688" fg:w="11"/><text x="92.5277%" y="1854.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (11 samples, 0.18%)</title><rect x="92.2777%" y="1860" width="0.1785%" height="15" fill="rgb(246,228,12)" fg:x="5688" fg:w="11"/><text x="92.5277%" y="1870.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (9 samples, 0.15%)</title><rect x="92.3102%" y="1876" width="0.1460%" height="15" fill="rgb(213,55,15)" fg:x="5690" fg:w="9"/><text x="92.5602%" y="1886.50"></text></g><g><title>check (numba/core/compiler_machinery.py:273) (9 samples, 0.15%)</title><rect x="92.3102%" y="1892" width="0.1460%" height="15" fill="rgb(209,9,3)" fg:x="5690" fg:w="9"/><text x="92.5602%" y="1902.50"></text></g><g><title>run_pass (numba/core/typed_passes.py:468) (16 samples, 0.26%)</title><rect x="92.2777%" y="1508" width="0.2596%" height="15" fill="rgb(230,59,30)" fg:x="5688" fg:w="16"/><text x="92.5277%" y="1518.50"></text></g><g><title>lower (numba/core/lowering.py:187) (16 samples, 0.26%)</title><rect x="92.2777%" y="1524" width="0.2596%" height="15" fill="rgb(209,121,21)" fg:x="5688" fg:w="16"/><text x="92.5277%" y="1534.50"></text></g><g><title>lower_normal_function (numba/core/lowering.py:226) (16 samples, 0.26%)</title><rect x="92.2777%" y="1540" width="0.2596%" height="15" fill="rgb(220,109,13)" fg:x="5688" fg:w="16"/><text x="92.5277%" y="1550.50"></text></g><g><title>lower_function_body (numba/core/lowering.py:256) (16 samples, 0.26%)</title><rect x="92.2777%" y="1556" width="0.2596%" height="15" fill="rgb(232,18,1)" fg:x="5688" fg:w="16"/><text x="92.5277%" y="1566.50"></text></g><g><title>lower_block (numba/core/lowering.py:270) (16 samples, 0.26%)</title><rect x="92.2777%" y="1572" width="0.2596%" height="15" fill="rgb(215,41,42)" fg:x="5688" fg:w="16"/><text x="92.5277%" y="1582.50"></text></g><g><title>lower_inst (numba/core/lowering.py:448) (16 samples, 0.26%)</title><rect x="92.2777%" y="1588" width="0.2596%" height="15" fill="rgb(224,123,36)" fg:x="5688" fg:w="16"/><text x="92.5277%" y="1598.50"></text></g><g><title>lower_assign (numba/core/lowering.py:660) (16 samples, 0.26%)</title><rect x="92.2777%" y="1604" width="0.2596%" height="15" fill="rgb(240,125,3)" fg:x="5688" fg:w="16"/><text x="92.5277%" y="1614.50"></text></g><g><title>lower_expr (numba/core/lowering.py:1196) (16 samples, 0.26%)</title><rect x="92.2777%" y="1620" width="0.2596%" height="15" fill="rgb(205,98,50)" fg:x="5688" fg:w="16"/><text x="92.5277%" y="1630.50"></text></g><g><title>lower_call (numba/core/lowering.py:925) (16 samples, 0.26%)</title><rect x="92.2777%" y="1636" width="0.2596%" height="15" fill="rgb(205,185,37)" fg:x="5688" fg:w="16"/><text x="92.5277%" y="1646.50"></text></g><g><title>_lower_call_normal (numba/core/lowering.py:1167) (16 samples, 0.26%)</title><rect x="92.2777%" y="1652" width="0.2596%" height="15" fill="rgb(238,207,15)" fg:x="5688" fg:w="16"/><text x="92.5277%" y="1662.50"></text></g><g><title>__call__ (numba/core/base.py:1190) (16 samples, 0.26%)</title><rect x="92.2777%" y="1668" width="0.2596%" height="15" fill="rgb(213,199,42)" fg:x="5688" fg:w="16"/><text x="92.5277%" y="1678.50"></text></g><g><title>wrapper (numba/core/base.py:1220) (16 samples, 0.26%)</title><rect x="92.2777%" y="1684" width="0.2596%" height="15" fill="rgb(235,201,11)" fg:x="5688" fg:w="16"/><text x="92.5277%" y="1694.50"></text></g><g><title>codegen (numba/np/arrayobj.py:5422) (16 samples, 0.26%)</title><rect x="92.2777%" y="1700" width="0.2596%" height="15" fill="rgb(207,46,11)" fg:x="5688" fg:w="16"/><text x="92.5277%" y="1710.50"></text></g><g><title>_empty_nd_impl (numba/np/arrayobj.py:4237) (16 samples, 0.26%)</title><rect x="92.2777%" y="1716" width="0.2596%" height="15" fill="rgb(241,35,35)" fg:x="5688" fg:w="16"/><text x="92.5277%" y="1726.50"></text></g><g><title>compile_internal (numba/core/base.py:881) (16 samples, 0.26%)</title><rect x="92.2777%" y="1732" width="0.2596%" height="15" fill="rgb(243,32,47)" fg:x="5688" fg:w="16"/><text x="92.5277%" y="1742.50"></text></g><g><title>compile_subroutine (numba/core/base.py:866) (16 samples, 0.26%)</title><rect x="92.2777%" y="1748" width="0.2596%" height="15" fill="rgb(247,202,23)" fg:x="5688" fg:w="16"/><text x="92.5277%" y="1758.50"></text></g><g><title>run_pass (numba/core/typed_passes.py:112) (20 samples, 0.32%)</title><rect x="92.2453%" y="612" width="0.3245%" height="15" fill="rgb(219,102,11)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="622.50"></text></g><g><title>type_inference_stage (numba/core/typed_passes.py:93) (20 samples, 0.32%)</title><rect x="92.2453%" y="628" width="0.3245%" height="15" fill="rgb(243,110,44)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="638.50"></text></g><g><title>propagate (numba/core/typeinfer.py:1083) (20 samples, 0.32%)</title><rect x="92.2453%" y="644" width="0.3245%" height="15" fill="rgb(222,74,54)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="654.50"></text></g><g><title>propagate (numba/core/typeinfer.py:160) (20 samples, 0.32%)</title><rect x="92.2453%" y="660" width="0.3245%" height="15" fill="rgb(216,99,12)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="670.50"></text></g><g><title>__call__ (numba/core/typeinfer.py:583) (20 samples, 0.32%)</title><rect x="92.2453%" y="676" width="0.3245%" height="15" fill="rgb(226,22,26)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="686.50"></text></g><g><title>resolve (numba/core/typeinfer.py:606) (20 samples, 0.32%)</title><rect x="92.2453%" y="692" width="0.3245%" height="15" fill="rgb(217,163,10)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="702.50"></text></g><g><title>resolve_call (numba/core/typeinfer.py:1577) (20 samples, 0.32%)</title><rect x="92.2453%" y="708" width="0.3245%" height="15" fill="rgb(213,25,53)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="718.50"></text></g><g><title>resolve_function_type (numba/core/typing/context.py:196) (20 samples, 0.32%)</title><rect x="92.2453%" y="724" width="0.3245%" height="15" fill="rgb(252,105,26)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="734.50"></text></g><g><title>_resolve_user_function_type (numba/core/typing/context.py:248) (20 samples, 0.32%)</title><rect x="92.2453%" y="740" width="0.3245%" height="15" fill="rgb(220,39,43)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="750.50"></text></g><g><title>get_call_type (numba/core/types/functions.py:308) (20 samples, 0.32%)</title><rect x="92.2453%" y="756" width="0.3245%" height="15" fill="rgb(229,68,48)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="766.50"></text></g><g><title>apply (numba/core/typing/templates.py:350) (20 samples, 0.32%)</title><rect x="92.2453%" y="772" width="0.3245%" height="15" fill="rgb(252,8,32)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="782.50"></text></g><g><title>generic (numba/core/typing/templates.py:613) (20 samples, 0.32%)</title><rect x="92.2453%" y="788" width="0.3245%" height="15" fill="rgb(223,20,43)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="798.50"></text></g><g><title>_get_impl (numba/core/typing/templates.py:712) (20 samples, 0.32%)</title><rect x="92.2453%" y="804" width="0.3245%" height="15" fill="rgb(229,81,49)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="814.50"></text></g><g><title>_build_impl (numba/core/typing/templates.py:816) (20 samples, 0.32%)</title><rect x="92.2453%" y="820" width="0.3245%" height="15" fill="rgb(236,28,36)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="830.50"></text></g><g><title>get_call_type (numba/core/types/functions.py:541) (20 samples, 0.32%)</title><rect x="92.2453%" y="836" width="0.3245%" height="15" fill="rgb(249,185,26)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="846.50"></text></g><g><title>get_call_template (numba/core/dispatcher.py:318) (20 samples, 0.32%)</title><rect x="92.2453%" y="852" width="0.3245%" height="15" fill="rgb(249,174,33)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="862.50"></text></g><g><title>compile (numba/core/dispatcher.py:905) (20 samples, 0.32%)</title><rect x="92.2453%" y="868" width="0.3245%" height="15" fill="rgb(233,201,37)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="878.50"></text></g><g><title>compile (numba/core/dispatcher.py:80) (20 samples, 0.32%)</title><rect x="92.2453%" y="884" width="0.3245%" height="15" fill="rgb(221,78,26)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="894.50"></text></g><g><title>_compile_cached (numba/core/dispatcher.py:94) (20 samples, 0.32%)</title><rect x="92.2453%" y="900" width="0.3245%" height="15" fill="rgb(250,127,30)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="910.50"></text></g><g><title>_compile_core (numba/core/dispatcher.py:107) (20 samples, 0.32%)</title><rect x="92.2453%" y="916" width="0.3245%" height="15" fill="rgb(230,49,44)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="926.50"></text></g><g><title>compile_extra (numba/core/compiler.py:744) (20 samples, 0.32%)</title><rect x="92.2453%" y="932" width="0.3245%" height="15" fill="rgb(229,67,23)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="942.50"></text></g><g><title>compile_extra (numba/core/compiler.py:438) (20 samples, 0.32%)</title><rect x="92.2453%" y="948" width="0.3245%" height="15" fill="rgb(249,83,47)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="958.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:506) (20 samples, 0.32%)</title><rect x="92.2453%" y="964" width="0.3245%" height="15" fill="rgb(215,43,3)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="974.50"></text></g><g><title>_compile_core (numba/core/compiler.py:472) (20 samples, 0.32%)</title><rect x="92.2453%" y="980" width="0.3245%" height="15" fill="rgb(238,154,13)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="990.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (20 samples, 0.32%)</title><rect x="92.2453%" y="996" width="0.3245%" height="15" fill="rgb(219,56,2)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="1006.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (20 samples, 0.32%)</title><rect x="92.2453%" y="1012" width="0.3245%" height="15" fill="rgb(233,0,4)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="1022.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (20 samples, 0.32%)</title><rect x="92.2453%" y="1028" width="0.3245%" height="15" fill="rgb(235,30,7)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="1038.50"></text></g><g><title>check (numba/core/compiler_machinery.py:273) (20 samples, 0.32%)</title><rect x="92.2453%" y="1044" width="0.3245%" height="15" fill="rgb(250,79,13)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="1054.50"></text></g><g><title>run_pass (numba/core/typed_passes.py:112) (20 samples, 0.32%)</title><rect x="92.2453%" y="1060" width="0.3245%" height="15" fill="rgb(211,146,34)" fg:x="5686" fg:w="20"/><text x="92.4953%" y="1070.50"></text></g><g><title>type_inference_stage (numba/core/typed_passes.py:93) (19 samples, 0.31%)</title><rect x="92.2615%" y="1076" width="0.3082%" height="15" fill="rgb(228,22,38)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1086.50"></text></g><g><title>propagate (numba/core/typeinfer.py:1083) (19 samples, 0.31%)</title><rect x="92.2615%" y="1092" width="0.3082%" height="15" fill="rgb(235,168,5)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1102.50"></text></g><g><title>propagate (numba/core/typeinfer.py:160) (19 samples, 0.31%)</title><rect x="92.2615%" y="1108" width="0.3082%" height="15" fill="rgb(221,155,16)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1118.50"></text></g><g><title>__call__ (numba/core/typeinfer.py:583) (19 samples, 0.31%)</title><rect x="92.2615%" y="1124" width="0.3082%" height="15" fill="rgb(215,215,53)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1134.50"></text></g><g><title>resolve (numba/core/typeinfer.py:606) (19 samples, 0.31%)</title><rect x="92.2615%" y="1140" width="0.3082%" height="15" fill="rgb(223,4,10)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1150.50"></text></g><g><title>resolve_call (numba/core/typeinfer.py:1577) (19 samples, 0.31%)</title><rect x="92.2615%" y="1156" width="0.3082%" height="15" fill="rgb(234,103,6)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1166.50"></text></g><g><title>resolve_function_type (numba/core/typing/context.py:196) (19 samples, 0.31%)</title><rect x="92.2615%" y="1172" width="0.3082%" height="15" fill="rgb(227,97,0)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1182.50"></text></g><g><title>_resolve_user_function_type (numba/core/typing/context.py:248) (19 samples, 0.31%)</title><rect x="92.2615%" y="1188" width="0.3082%" height="15" fill="rgb(234,150,53)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1198.50"></text></g><g><title>get_call_type (numba/core/types/functions.py:308) (19 samples, 0.31%)</title><rect x="92.2615%" y="1204" width="0.3082%" height="15" fill="rgb(228,201,54)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1214.50"></text></g><g><title>apply (numba/core/typing/templates.py:350) (19 samples, 0.31%)</title><rect x="92.2615%" y="1220" width="0.3082%" height="15" fill="rgb(222,22,37)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1230.50"></text></g><g><title>generic (numba/core/typing/templates.py:613) (19 samples, 0.31%)</title><rect x="92.2615%" y="1236" width="0.3082%" height="15" fill="rgb(237,53,32)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1246.50"></text></g><g><title>_get_impl (numba/core/typing/templates.py:712) (19 samples, 0.31%)</title><rect x="92.2615%" y="1252" width="0.3082%" height="15" fill="rgb(233,25,53)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1262.50"></text></g><g><title>_build_impl (numba/core/typing/templates.py:816) (19 samples, 0.31%)</title><rect x="92.2615%" y="1268" width="0.3082%" height="15" fill="rgb(210,40,34)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1278.50"></text></g><g><title>get_call_type (numba/core/types/functions.py:541) (19 samples, 0.31%)</title><rect x="92.2615%" y="1284" width="0.3082%" height="15" fill="rgb(241,220,44)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1294.50"></text></g><g><title>get_call_template (numba/core/dispatcher.py:318) (19 samples, 0.31%)</title><rect x="92.2615%" y="1300" width="0.3082%" height="15" fill="rgb(235,28,35)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1310.50"></text></g><g><title>compile (numba/core/dispatcher.py:905) (19 samples, 0.31%)</title><rect x="92.2615%" y="1316" width="0.3082%" height="15" fill="rgb(210,56,17)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1326.50"></text></g><g><title>compile (numba/core/dispatcher.py:80) (19 samples, 0.31%)</title><rect x="92.2615%" y="1332" width="0.3082%" height="15" fill="rgb(224,130,29)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1342.50"></text></g><g><title>_compile_cached (numba/core/dispatcher.py:94) (19 samples, 0.31%)</title><rect x="92.2615%" y="1348" width="0.3082%" height="15" fill="rgb(235,212,8)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1358.50"></text></g><g><title>_compile_core (numba/core/dispatcher.py:107) (19 samples, 0.31%)</title><rect x="92.2615%" y="1364" width="0.3082%" height="15" fill="rgb(223,33,50)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1374.50"></text></g><g><title>compile_extra (numba/core/compiler.py:744) (19 samples, 0.31%)</title><rect x="92.2615%" y="1380" width="0.3082%" height="15" fill="rgb(219,149,13)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1390.50"></text></g><g><title>compile_extra (numba/core/compiler.py:438) (19 samples, 0.31%)</title><rect x="92.2615%" y="1396" width="0.3082%" height="15" fill="rgb(250,156,29)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1406.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:506) (19 samples, 0.31%)</title><rect x="92.2615%" y="1412" width="0.3082%" height="15" fill="rgb(216,193,19)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1422.50"></text></g><g><title>_compile_core (numba/core/compiler.py:472) (19 samples, 0.31%)</title><rect x="92.2615%" y="1428" width="0.3082%" height="15" fill="rgb(216,135,14)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1438.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (19 samples, 0.31%)</title><rect x="92.2615%" y="1444" width="0.3082%" height="15" fill="rgb(241,47,5)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1454.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (19 samples, 0.31%)</title><rect x="92.2615%" y="1460" width="0.3082%" height="15" fill="rgb(233,42,35)" fg:x="5687" fg:w="19"/><text x="92.5115%" y="1470.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (18 samples, 0.29%)</title><rect x="92.2777%" y="1476" width="0.2920%" height="15" fill="rgb(231,13,6)" fg:x="5688" fg:w="18"/><text x="92.5277%" y="1486.50"></text></g><g><title>check (numba/core/compiler_machinery.py:273) (18 samples, 0.29%)</title><rect x="92.2777%" y="1492" width="0.2920%" height="15" fill="rgb(207,181,40)" fg:x="5688" fg:w="18"/><text x="92.5277%" y="1502.50"></text></g><g><title>numba_funcify_CAReduce (pytensor/link/numba/dispatch/elemwise.py:499) (31 samples, 0.50%)</title><rect x="92.2291%" y="372" width="0.5029%" height="15" fill="rgb(254,173,49)" fg:x="5685" fg:w="31"/><text x="92.4791%" y="382.50"></text></g><g><title>jit_compile_reducer (pytensor/link/numba/dispatch/elemwise.py:321) (31 samples, 0.50%)</title><rect x="92.2291%" y="388" width="0.5029%" height="15" fill="rgb(221,1,38)" fg:x="5685" fg:w="31"/><text x="92.4791%" y="398.50"></text></g><g><title>wrapper (numba/core/decorators.py:232) (31 samples, 0.50%)</title><rect x="92.2291%" y="404" width="0.5029%" height="15" fill="rgb(206,124,46)" fg:x="5685" fg:w="31"/><text x="92.4791%" y="414.50"></text></g><g><title>compile (numba/core/dispatcher.py:905) (30 samples, 0.49%)</title><rect x="92.2453%" y="420" width="0.4867%" height="15" fill="rgb(249,21,11)" fg:x="5686" fg:w="30"/><text x="92.4953%" y="430.50"></text></g><g><title>compile (numba/core/dispatcher.py:80) (30 samples, 0.49%)</title><rect x="92.2453%" y="436" width="0.4867%" height="15" fill="rgb(222,201,40)" fg:x="5686" fg:w="30"/><text x="92.4953%" y="446.50"></text></g><g><title>_compile_cached (numba/core/dispatcher.py:94) (30 samples, 0.49%)</title><rect x="92.2453%" y="452" width="0.4867%" height="15" fill="rgb(235,61,29)" fg:x="5686" fg:w="30"/><text x="92.4953%" y="462.50"></text></g><g><title>_compile_core (numba/core/dispatcher.py:107) (30 samples, 0.49%)</title><rect x="92.2453%" y="468" width="0.4867%" height="15" fill="rgb(219,207,3)" fg:x="5686" fg:w="30"/><text x="92.4953%" y="478.50"></text></g><g><title>compile_extra (numba/core/compiler.py:744) (30 samples, 0.49%)</title><rect x="92.2453%" y="484" width="0.4867%" height="15" fill="rgb(222,56,46)" fg:x="5686" fg:w="30"/><text x="92.4953%" y="494.50"></text></g><g><title>compile_extra (numba/core/compiler.py:438) (30 samples, 0.49%)</title><rect x="92.2453%" y="500" width="0.4867%" height="15" fill="rgb(239,76,54)" fg:x="5686" fg:w="30"/><text x="92.4953%" y="510.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:506) (30 samples, 0.49%)</title><rect x="92.2453%" y="516" width="0.4867%" height="15" fill="rgb(231,124,27)" fg:x="5686" fg:w="30"/><text x="92.4953%" y="526.50"></text></g><g><title>_compile_core (numba/core/compiler.py:472) (30 samples, 0.49%)</title><rect x="92.2453%" y="532" width="0.4867%" height="15" fill="rgb(249,195,6)" fg:x="5686" fg:w="30"/><text x="92.4953%" y="542.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (30 samples, 0.49%)</title><rect x="92.2453%" y="548" width="0.4867%" height="15" fill="rgb(237,174,47)" fg:x="5686" fg:w="30"/><text x="92.4953%" y="558.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (30 samples, 0.49%)</title><rect x="92.2453%" y="564" width="0.4867%" height="15" fill="rgb(206,201,31)" fg:x="5686" fg:w="30"/><text x="92.4953%" y="574.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (30 samples, 0.49%)</title><rect x="92.2453%" y="580" width="0.4867%" height="15" fill="rgb(231,57,52)" fg:x="5686" fg:w="30"/><text x="92.4953%" y="590.50"></text></g><g><title>check (numba/core/compiler_machinery.py:273) (30 samples, 0.49%)</title><rect x="92.2453%" y="596" width="0.4867%" height="15" fill="rgb(248,177,22)" fg:x="5686" fg:w="30"/><text x="92.4953%" y="606.50"></text></g><g><title>run_pass (numba/core/typed_passes.py:497) (8 samples, 0.13%)</title><rect x="92.6022%" y="612" width="0.1298%" height="15" fill="rgb(215,211,37)" fg:x="5708" fg:w="8"/><text x="92.8522%" y="622.50"></text></g><g><title>get_executable (numba/core/cpu.py:239) (8 samples, 0.13%)</title><rect x="92.6022%" y="628" width="0.1298%" height="15" fill="rgb(241,128,51)" fg:x="5708" fg:w="8"/><text x="92.8522%" y="638.50"></text></g><g><title>get_pointer_to_function (numba/core/codegen.py:989) (8 samples, 0.13%)</title><rect x="92.6022%" y="644" width="0.1298%" height="15" fill="rgb(227,165,31)" fg:x="5708" fg:w="8"/><text x="92.8522%" y="654.50"></text></g><g><title>_ensure_finalized (numba/core/codegen.py:567) (8 samples, 0.13%)</title><rect x="92.6022%" y="660" width="0.1298%" height="15" fill="rgb(228,167,24)" fg:x="5708" fg:w="8"/><text x="92.8522%" y="670.50"></text></g><g><title>fgraph_convert (pytensor/link/numba/linker.py:10) (44 samples, 0.71%)</title><rect x="92.2291%" y="292" width="0.7138%" height="15" fill="rgb(228,143,12)" fg:x="5685" fg:w="44"/><text x="92.4791%" y="302.50"></text></g><g><title>wrapper (functools.py:909) (44 samples, 0.71%)</title><rect x="92.2291%" y="308" width="0.7138%" height="15" fill="rgb(249,149,8)" fg:x="5685" fg:w="44"/><text x="92.4791%" y="318.50"></text></g><g><title>numba_funcify_FunctionGraph (pytensor/link/numba/dispatch/basic.py:463) (44 samples, 0.71%)</title><rect x="92.2291%" y="324" width="0.7138%" height="15" fill="rgb(243,35,44)" fg:x="5685" fg:w="44"/><text x="92.4791%" y="334.50"></text></g><g><title>fgraph_to_python (pytensor/link/utils.py:736) (44 samples, 0.71%)</title><rect x="92.2291%" y="340" width="0.7138%" height="15" fill="rgb(246,89,9)" fg:x="5685" fg:w="44"/><text x="92.4791%" y="350.50"></text></g><g><title>wrapper (functools.py:909) (44 samples, 0.71%)</title><rect x="92.2291%" y="356" width="0.7138%" height="15" fill="rgb(233,213,13)" fg:x="5685" fg:w="44"/><text x="92.4791%" y="366.50"></text></g><g><title>numba_funcify_Elemwise (pytensor/link/numba/dispatch/elemwise.py:359) (13 samples, 0.21%)</title><rect x="92.7320%" y="372" width="0.2109%" height="15" fill="rgb(233,141,41)" fg:x="5716" fg:w="13"/><text x="92.9820%" y="382.50"></text></g><g><title>wrapper (functools.py:909) (13 samples, 0.21%)</title><rect x="92.7320%" y="388" width="0.2109%" height="15" fill="rgb(239,167,4)" fg:x="5716" fg:w="13"/><text x="92.9820%" y="398.50"></text></g><g><title>numba_funcify_Composite (pytensor/link/numba/dispatch/scalar.py:243) (10 samples, 0.16%)</title><rect x="92.7807%" y="404" width="0.1622%" height="15" fill="rgb(209,217,16)" fg:x="5719" fg:w="10"/><text x="93.0307%" y="414.50"></text></g><g><title>wrapper (functools.py:909) (10 samples, 0.16%)</title><rect x="92.7807%" y="420" width="0.1622%" height="15" fill="rgb(219,88,35)" fg:x="5719" fg:w="10"/><text x="93.0307%" y="430.50"></text></g><g><title>numba_funcify_FunctionGraph (pytensor/link/numba/dispatch/basic.py:463) (10 samples, 0.16%)</title><rect x="92.7807%" y="436" width="0.1622%" height="15" fill="rgb(220,193,23)" fg:x="5719" fg:w="10"/><text x="93.0307%" y="446.50"></text></g><g><title>fgraph_to_python (pytensor/link/utils.py:736) (10 samples, 0.16%)</title><rect x="92.7807%" y="452" width="0.1622%" height="15" fill="rgb(230,90,52)" fg:x="5719" fg:w="10"/><text x="93.0307%" y="462.50"></text></g><g><title>wrapper (functools.py:909) (10 samples, 0.16%)</title><rect x="92.7807%" y="468" width="0.1622%" height="15" fill="rgb(252,106,19)" fg:x="5719" fg:w="10"/><text x="93.0307%" y="478.50"></text></g><g><title>numba_funcify_ScalarOp (pytensor/link/numba/dispatch/scalar.py:138) (9 samples, 0.15%)</title><rect x="92.7969%" y="484" width="0.1460%" height="15" fill="rgb(206,74,20)" fg:x="5720" fg:w="9"/><text x="93.0469%" y="494.50"></text></g><g><title>wrapper (numba/core/decorators.py:232) (9 samples, 0.15%)</title><rect x="92.7969%" y="500" width="0.1460%" height="15" fill="rgb(230,138,44)" fg:x="5720" fg:w="9"/><text x="93.0469%" y="510.50"></text></g><g><title>compile (numba/core/dispatcher.py:905) (9 samples, 0.15%)</title><rect x="92.7969%" y="516" width="0.1460%" height="15" fill="rgb(235,182,43)" fg:x="5720" fg:w="9"/><text x="93.0469%" y="526.50"></text></g><g><title>compile (numba/core/dispatcher.py:80) (9 samples, 0.15%)</title><rect x="92.7969%" y="532" width="0.1460%" height="15" fill="rgb(242,16,51)" fg:x="5720" fg:w="9"/><text x="93.0469%" y="542.50"></text></g><g><title>_compile_cached (numba/core/dispatcher.py:94) (9 samples, 0.15%)</title><rect x="92.7969%" y="548" width="0.1460%" height="15" fill="rgb(248,9,4)" fg:x="5720" fg:w="9"/><text x="93.0469%" y="558.50"></text></g><g><title>_compile_core (numba/core/dispatcher.py:107) (9 samples, 0.15%)</title><rect x="92.7969%" y="564" width="0.1460%" height="15" fill="rgb(210,31,22)" fg:x="5720" fg:w="9"/><text x="93.0469%" y="574.50"></text></g><g><title>compile_extra (numba/core/compiler.py:744) (9 samples, 0.15%)</title><rect x="92.7969%" y="580" width="0.1460%" height="15" fill="rgb(239,54,39)" fg:x="5720" fg:w="9"/><text x="93.0469%" y="590.50"></text></g><g><title>compile_extra (numba/core/compiler.py:438) (9 samples, 0.15%)</title><rect x="92.7969%" y="596" width="0.1460%" height="15" fill="rgb(230,99,41)" fg:x="5720" fg:w="9"/><text x="93.0469%" y="606.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:506) (9 samples, 0.15%)</title><rect x="92.7969%" y="612" width="0.1460%" height="15" fill="rgb(253,106,12)" fg:x="5720" fg:w="9"/><text x="93.0469%" y="622.50"></text></g><g><title>_compile_core (numba/core/compiler.py:472) (9 samples, 0.15%)</title><rect x="92.7969%" y="628" width="0.1460%" height="15" fill="rgb(213,46,41)" fg:x="5720" fg:w="9"/><text x="93.0469%" y="638.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (9 samples, 0.15%)</title><rect x="92.7969%" y="644" width="0.1460%" height="15" fill="rgb(215,133,35)" fg:x="5720" fg:w="9"/><text x="93.0469%" y="654.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (9 samples, 0.15%)</title><rect x="92.7969%" y="660" width="0.1460%" height="15" fill="rgb(213,28,5)" fg:x="5720" fg:w="9"/><text x="93.0469%" y="670.50"></text></g><g><title>__init__ (pymc_bart/compile_pymc.py:37) (72 samples, 1.17%)</title><rect x="91.8397%" y="132" width="1.1681%" height="15" fill="rgb(215,77,49)" fg:x="5661" fg:w="72"/><text x="92.0897%" y="142.50"></text></g><g><title>_make_functions (pymc_bart/compile_pymc.py:61) (70 samples, 1.14%)</title><rect x="91.8722%" y="148" width="1.1356%" height="15" fill="rgb(248,100,22)" fg:x="5663" fg:w="70"/><text x="92.1222%" y="158.50"></text></g><g><title>compile_pymc (pymc/pytensorf.py:1054) (70 samples, 1.14%)</title><rect x="91.8722%" y="164" width="1.1356%" height="15" fill="rgb(208,67,9)" fg:x="5663" fg:w="70"/><text x="92.1222%" y="174.50"></text></g><g><title>function (pytensor/compile/function/__init__.py:318) (70 samples, 1.14%)</title><rect x="91.8722%" y="180" width="1.1356%" height="15" fill="rgb(219,133,21)" fg:x="5663" fg:w="70"/><text x="92.1222%" y="190.50"></text></g><g><title>pfunc (pytensor/compile/function/pfunc.py:465) (70 samples, 1.14%)</title><rect x="91.8722%" y="196" width="1.1356%" height="15" fill="rgb(246,46,29)" fg:x="5663" fg:w="70"/><text x="92.1222%" y="206.50"></text></g><g><title>orig_function (pytensor/compile/function/types.py:1769) (48 samples, 0.78%)</title><rect x="92.2291%" y="212" width="0.7787%" height="15" fill="rgb(246,185,52)" fg:x="5685" fg:w="48"/><text x="92.4791%" y="222.50"></text></g><g><title>create (pytensor/compile/function/types.py:1661) (48 samples, 0.78%)</title><rect x="92.2291%" y="228" width="0.7787%" height="15" fill="rgb(252,136,11)" fg:x="5685" fg:w="48"/><text x="92.4791%" y="238.50"></text></g><g><title>make_thunk (pytensor/link/basic.py:245) (48 samples, 0.78%)</title><rect x="92.2291%" y="244" width="0.7787%" height="15" fill="rgb(219,138,53)" fg:x="5685" fg:w="48"/><text x="92.4791%" y="254.50"></text></g><g><title>make_all (pytensor/link/basic.py:695) (48 samples, 0.78%)</title><rect x="92.2291%" y="260" width="0.7787%" height="15" fill="rgb(211,51,23)" fg:x="5685" fg:w="48"/><text x="92.4791%" y="270.50"></text></g><g><title>create_jitable_thunk (pytensor/link/basic.py:647) (48 samples, 0.78%)</title><rect x="92.2291%" y="276" width="0.7787%" height="15" fill="rgb(247,221,28)" fg:x="5685" fg:w="48"/><text x="92.4791%" y="286.50"></text></g><g><title>get_call_type (numba/core/types/functions.py:308) (27 samples, 0.44%)</title><rect x="93.0240%" y="916" width="0.4380%" height="15" fill="rgb(251,222,45)" fg:x="5734" fg:w="27"/><text x="93.2740%" y="926.50"></text></g><g><title>apply (numba/core/typing/templates.py:350) (27 samples, 0.44%)</title><rect x="93.0240%" y="932" width="0.4380%" height="15" fill="rgb(217,162,53)" fg:x="5734" fg:w="27"/><text x="93.2740%" y="942.50"></text></g><g><title>generic (numba/core/typing/templates.py:613) (27 samples, 0.44%)</title><rect x="93.0240%" y="948" width="0.4380%" height="15" fill="rgb(229,93,14)" fg:x="5734" fg:w="27"/><text x="93.2740%" y="958.50"></text></g><g><title>_get_impl (numba/core/typing/templates.py:712) (27 samples, 0.44%)</title><rect x="93.0240%" y="964" width="0.4380%" height="15" fill="rgb(209,67,49)" fg:x="5734" fg:w="27"/><text x="93.2740%" y="974.50"></text></g><g><title>_build_impl (numba/core/typing/templates.py:816) (27 samples, 0.44%)</title><rect x="93.0240%" y="980" width="0.4380%" height="15" fill="rgb(213,87,29)" fg:x="5734" fg:w="27"/><text x="93.2740%" y="990.50"></text></g><g><title>get_call_type (numba/core/types/functions.py:541) (27 samples, 0.44%)</title><rect x="93.0240%" y="996" width="0.4380%" height="15" fill="rgb(205,151,52)" fg:x="5734" fg:w="27"/><text x="93.2740%" y="1006.50"></text></g><g><title>get_call_template (numba/core/dispatcher.py:318) (27 samples, 0.44%)</title><rect x="93.0240%" y="1012" width="0.4380%" height="15" fill="rgb(253,215,39)" fg:x="5734" fg:w="27"/><text x="93.2740%" y="1022.50"></text></g><g><title>compile (numba/core/dispatcher.py:905) (27 samples, 0.44%)</title><rect x="93.0240%" y="1028" width="0.4380%" height="15" fill="rgb(221,220,41)" fg:x="5734" fg:w="27"/><text x="93.2740%" y="1038.50"></text></g><g><title>compile (numba/core/dispatcher.py:80) (27 samples, 0.44%)</title><rect x="93.0240%" y="1044" width="0.4380%" height="15" fill="rgb(218,133,21)" fg:x="5734" fg:w="27"/><text x="93.2740%" y="1054.50"></text></g><g><title>_compile_cached (numba/core/dispatcher.py:94) (27 samples, 0.44%)</title><rect x="93.0240%" y="1060" width="0.4380%" height="15" fill="rgb(221,193,43)" fg:x="5734" fg:w="27"/><text x="93.2740%" y="1070.50"></text></g><g><title>_compile_core (numba/core/dispatcher.py:107) (27 samples, 0.44%)</title><rect x="93.0240%" y="1076" width="0.4380%" height="15" fill="rgb(240,128,52)" fg:x="5734" fg:w="27"/><text x="93.2740%" y="1086.50"></text></g><g><title>compile_extra (numba/core/compiler.py:744) (27 samples, 0.44%)</title><rect x="93.0240%" y="1092" width="0.4380%" height="15" fill="rgb(253,114,12)" fg:x="5734" fg:w="27"/><text x="93.2740%" y="1102.50"></text></g><g><title>compile_extra (numba/core/compiler.py:438) (27 samples, 0.44%)</title><rect x="93.0240%" y="1108" width="0.4380%" height="15" fill="rgb(215,223,47)" fg:x="5734" fg:w="27"/><text x="93.2740%" y="1118.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:506) (27 samples, 0.44%)</title><rect x="93.0240%" y="1124" width="0.4380%" height="15" fill="rgb(248,225,23)" fg:x="5734" fg:w="27"/><text x="93.2740%" y="1134.50"></text></g><g><title>_compile_core (numba/core/compiler.py:472) (25 samples, 0.41%)</title><rect x="93.0565%" y="1140" width="0.4056%" height="15" fill="rgb(250,108,0)" fg:x="5736" fg:w="25"/><text x="93.3065%" y="1150.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (25 samples, 0.41%)</title><rect x="93.0565%" y="1156" width="0.4056%" height="15" fill="rgb(228,208,7)" fg:x="5736" fg:w="25"/><text x="93.3065%" y="1166.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (25 samples, 0.41%)</title><rect x="93.0565%" y="1172" width="0.4056%" height="15" fill="rgb(244,45,10)" fg:x="5736" fg:w="25"/><text x="93.3065%" y="1182.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (25 samples, 0.41%)</title><rect x="93.0565%" y="1188" width="0.4056%" height="15" fill="rgb(207,125,25)" fg:x="5736" fg:w="25"/><text x="93.3065%" y="1198.50"></text></g><g><title>check (numba/core/compiler_machinery.py:273) (25 samples, 0.41%)</title><rect x="93.0565%" y="1204" width="0.4056%" height="15" fill="rgb(210,195,18)" fg:x="5736" fg:w="25"/><text x="93.3065%" y="1214.50"></text></g><g><title>run_pass (numba/core/typed_passes.py:497) (12 samples, 0.19%)</title><rect x="93.2674%" y="1220" width="0.1947%" height="15" fill="rgb(249,80,12)" fg:x="5749" fg:w="12"/><text x="93.5174%" y="1230.50"></text></g><g><title>get_executable (numba/core/cpu.py:239) (12 samples, 0.19%)</title><rect x="93.2674%" y="1236" width="0.1947%" height="15" fill="rgb(221,65,9)" fg:x="5749" fg:w="12"/><text x="93.5174%" y="1246.50"></text></g><g><title>get_pointer_to_function (numba/core/codegen.py:989) (12 samples, 0.19%)</title><rect x="93.2674%" y="1252" width="0.1947%" height="15" fill="rgb(235,49,36)" fg:x="5749" fg:w="12"/><text x="93.5174%" y="1262.50"></text></g><g><title>_ensure_finalized (numba/core/codegen.py:567) (12 samples, 0.19%)</title><rect x="93.2674%" y="1268" width="0.1947%" height="15" fill="rgb(225,32,20)" fg:x="5749" fg:w="12"/><text x="93.5174%" y="1278.50"></text></g><g><title>finalize (numba/core/codegen.py:765) (8 samples, 0.13%)</title><rect x="93.3323%" y="1284" width="0.1298%" height="15" fill="rgb(215,141,46)" fg:x="5753" fg:w="8"/><text x="93.5823%" y="1294.50"></text></g><g><title>_finalize_final_module (numba/core/codegen.py:797) (8 samples, 0.13%)</title><rect x="93.3323%" y="1300" width="0.1298%" height="15" fill="rgb(250,160,47)" fg:x="5753" fg:w="8"/><text x="93.5823%" y="1310.50"></text></g><g><title>_finalize_specific (numba/core/codegen.py:999) (8 samples, 0.13%)</title><rect x="93.3323%" y="1316" width="0.1298%" height="15" fill="rgb(216,222,40)" fg:x="5753" fg:w="8"/><text x="93.5823%" y="1326.50"></text></g><g><title>wrapper (numba/core/codegen.py:1060) (8 samples, 0.13%)</title><rect x="93.3323%" y="1332" width="0.1298%" height="15" fill="rgb(234,217,39)" fg:x="5753" fg:w="8"/><text x="93.5823%" y="1342.50"></text></g><g><title>finalize_object (llvmlite/binding/executionengine.py:99) (8 samples, 0.13%)</title><rect x="93.3323%" y="1348" width="0.1298%" height="15" fill="rgb(207,178,40)" fg:x="5753" fg:w="8"/><text x="93.5823%" y="1358.50"></text></g><g><title>__call__ (llvmlite/binding/ffi.py:192) (8 samples, 0.13%)</title><rect x="93.3323%" y="1364" width="0.1298%" height="15" fill="rgb(221,136,13)" fg:x="5753" fg:w="8"/><text x="93.5823%" y="1374.50"></text></g><g><title>_compile_subroutine_no_cache (numba/core/base.py:837) (14 samples, 0.23%)</title><rect x="93.4783%" y="1828" width="0.2271%" height="15" fill="rgb(249,199,10)" fg:x="5762" fg:w="14"/><text x="93.7283%" y="1838.50"></text></g><g><title>compile_internal (numba/core/compiler.py:818) (14 samples, 0.23%)</title><rect x="93.4783%" y="1844" width="0.2271%" height="15" fill="rgb(249,222,13)" fg:x="5762" fg:w="14"/><text x="93.7283%" y="1854.50"></text></g><g><title>compile_extra (numba/core/compiler.py:438) (14 samples, 0.23%)</title><rect x="93.4783%" y="1860" width="0.2271%" height="15" fill="rgb(244,185,38)" fg:x="5762" fg:w="14"/><text x="93.7283%" y="1870.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:506) (14 samples, 0.23%)</title><rect x="93.4783%" y="1876" width="0.2271%" height="15" fill="rgb(236,202,9)" fg:x="5762" fg:w="14"/><text x="93.7283%" y="1886.50"></text></g><g><title>_compile_core (numba/core/compiler.py:472) (14 samples, 0.23%)</title><rect x="93.4783%" y="1892" width="0.2271%" height="15" fill="rgb(250,229,37)" fg:x="5762" fg:w="14"/><text x="93.7283%" y="1902.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (14 samples, 0.23%)</title><rect x="93.4783%" y="1908" width="0.2271%" height="15" fill="rgb(206,174,23)" fg:x="5762" fg:w="14"/><text x="93.7283%" y="1918.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (14 samples, 0.23%)</title><rect x="93.4783%" y="1924" width="0.2271%" height="15" fill="rgb(211,33,43)" fg:x="5762" fg:w="14"/><text x="93.7283%" y="1934.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (11 samples, 0.18%)</title><rect x="93.5269%" y="1940" width="0.1785%" height="15" fill="rgb(245,58,50)" fg:x="5765" fg:w="11"/><text x="93.7769%" y="1950.50"></text></g><g><title>check (numba/core/compiler_machinery.py:273) (11 samples, 0.18%)</title><rect x="93.5269%" y="1956" width="0.1785%" height="15" fill="rgb(244,68,36)" fg:x="5765" fg:w="11"/><text x="93.7769%" y="1966.50"></text></g><g><title>run_pass (numba/core/typed_passes.py:468) (17 samples, 0.28%)</title><rect x="93.4783%" y="1588" width="0.2758%" height="15" fill="rgb(232,229,15)" fg:x="5762" fg:w="17"/><text x="93.7283%" y="1598.50"></text></g><g><title>lower (numba/core/lowering.py:187) (17 samples, 0.28%)</title><rect x="93.4783%" y="1604" width="0.2758%" height="15" fill="rgb(254,30,23)" fg:x="5762" fg:w="17"/><text x="93.7283%" y="1614.50"></text></g><g><title>lower_normal_function (numba/core/lowering.py:226) (17 samples, 0.28%)</title><rect x="93.4783%" y="1620" width="0.2758%" height="15" fill="rgb(235,160,14)" fg:x="5762" fg:w="17"/><text x="93.7283%" y="1630.50"></text></g><g><title>lower_function_body (numba/core/lowering.py:256) (17 samples, 0.28%)</title><rect x="93.4783%" y="1636" width="0.2758%" height="15" fill="rgb(212,155,44)" fg:x="5762" fg:w="17"/><text x="93.7283%" y="1646.50"></text></g><g><title>lower_block (numba/core/lowering.py:270) (17 samples, 0.28%)</title><rect x="93.4783%" y="1652" width="0.2758%" height="15" fill="rgb(226,2,50)" fg:x="5762" fg:w="17"/><text x="93.7283%" y="1662.50"></text></g><g><title>lower_inst (numba/core/lowering.py:448) (17 samples, 0.28%)</title><rect x="93.4783%" y="1668" width="0.2758%" height="15" fill="rgb(234,177,6)" fg:x="5762" fg:w="17"/><text x="93.7283%" y="1678.50"></text></g><g><title>lower_assign (numba/core/lowering.py:660) (17 samples, 0.28%)</title><rect x="93.4783%" y="1684" width="0.2758%" height="15" fill="rgb(217,24,9)" fg:x="5762" fg:w="17"/><text x="93.7283%" y="1694.50"></text></g><g><title>lower_expr (numba/core/lowering.py:1196) (17 samples, 0.28%)</title><rect x="93.4783%" y="1700" width="0.2758%" height="15" fill="rgb(220,13,46)" fg:x="5762" fg:w="17"/><text x="93.7283%" y="1710.50"></text></g><g><title>lower_call (numba/core/lowering.py:925) (17 samples, 0.28%)</title><rect x="93.4783%" y="1716" width="0.2758%" height="15" fill="rgb(239,221,27)" fg:x="5762" fg:w="17"/><text x="93.7283%" y="1726.50"></text></g><g><title>_lower_call_normal (numba/core/lowering.py:1167) (17 samples, 0.28%)</title><rect x="93.4783%" y="1732" width="0.2758%" height="15" fill="rgb(222,198,25)" fg:x="5762" fg:w="17"/><text x="93.7283%" y="1742.50"></text></g><g><title>__call__ (numba/core/base.py:1190) (17 samples, 0.28%)</title><rect x="93.4783%" y="1748" width="0.2758%" height="15" fill="rgb(211,99,13)" fg:x="5762" fg:w="17"/><text x="93.7283%" y="1758.50"></text></g><g><title>wrapper (numba/core/base.py:1220) (17 samples, 0.28%)</title><rect x="93.4783%" y="1764" width="0.2758%" height="15" fill="rgb(232,111,31)" fg:x="5762" fg:w="17"/><text x="93.7283%" y="1774.50"></text></g><g><title>array_reshape (numba/np/arrayobj.py:2112) (17 samples, 0.28%)</title><rect x="93.4783%" y="1780" width="0.2758%" height="15" fill="rgb(245,82,37)" fg:x="5762" fg:w="17"/><text x="93.7283%" y="1790.50"></text></g><g><title>compile_internal (numba/core/base.py:881) (17 samples, 0.28%)</title><rect x="93.4783%" y="1796" width="0.2758%" height="15" fill="rgb(227,149,46)" fg:x="5762" fg:w="17"/><text x="93.7283%" y="1806.50"></text></g><g><title>compile_subroutine (numba/core/base.py:866) (17 samples, 0.28%)</title><rect x="93.4783%" y="1812" width="0.2758%" height="15" fill="rgb(218,36,50)" fg:x="5762" fg:w="17"/><text x="93.7283%" y="1822.50"></text></g><g><title>run_pass (numba/core/typed_passes.py:112) (19 samples, 0.31%)</title><rect x="93.4783%" y="1140" width="0.3082%" height="15" fill="rgb(226,80,48)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1150.50"></text></g><g><title>type_inference_stage (numba/core/typed_passes.py:93) (19 samples, 0.31%)</title><rect x="93.4783%" y="1156" width="0.3082%" height="15" fill="rgb(238,224,15)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1166.50"></text></g><g><title>propagate (numba/core/typeinfer.py:1083) (19 samples, 0.31%)</title><rect x="93.4783%" y="1172" width="0.3082%" height="15" fill="rgb(241,136,10)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1182.50"></text></g><g><title>propagate (numba/core/typeinfer.py:160) (19 samples, 0.31%)</title><rect x="93.4783%" y="1188" width="0.3082%" height="15" fill="rgb(208,32,45)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1198.50"></text></g><g><title>__call__ (numba/core/typeinfer.py:583) (19 samples, 0.31%)</title><rect x="93.4783%" y="1204" width="0.3082%" height="15" fill="rgb(207,135,9)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1214.50"></text></g><g><title>resolve (numba/core/typeinfer.py:606) (19 samples, 0.31%)</title><rect x="93.4783%" y="1220" width="0.3082%" height="15" fill="rgb(206,86,44)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1230.50"></text></g><g><title>resolve_call (numba/core/typeinfer.py:1577) (19 samples, 0.31%)</title><rect x="93.4783%" y="1236" width="0.3082%" height="15" fill="rgb(245,177,15)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1246.50"></text></g><g><title>resolve_function_type (numba/core/typing/context.py:196) (19 samples, 0.31%)</title><rect x="93.4783%" y="1252" width="0.3082%" height="15" fill="rgb(206,64,50)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1262.50"></text></g><g><title>_resolve_user_function_type (numba/core/typing/context.py:248) (19 samples, 0.31%)</title><rect x="93.4783%" y="1268" width="0.3082%" height="15" fill="rgb(234,36,40)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1278.50"></text></g><g><title>get_call_type (numba/core/types/functions.py:308) (19 samples, 0.31%)</title><rect x="93.4783%" y="1284" width="0.3082%" height="15" fill="rgb(213,64,8)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1294.50"></text></g><g><title>apply (numba/core/typing/templates.py:350) (19 samples, 0.31%)</title><rect x="93.4783%" y="1300" width="0.3082%" height="15" fill="rgb(210,75,36)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1310.50"></text></g><g><title>generic (numba/core/typing/templates.py:613) (19 samples, 0.31%)</title><rect x="93.4783%" y="1316" width="0.3082%" height="15" fill="rgb(229,88,21)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1326.50"></text></g><g><title>_get_impl (numba/core/typing/templates.py:712) (19 samples, 0.31%)</title><rect x="93.4783%" y="1332" width="0.3082%" height="15" fill="rgb(252,204,47)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1342.50"></text></g><g><title>_build_impl (numba/core/typing/templates.py:816) (19 samples, 0.31%)</title><rect x="93.4783%" y="1348" width="0.3082%" height="15" fill="rgb(208,77,27)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1358.50"></text></g><g><title>get_call_type (numba/core/types/functions.py:541) (19 samples, 0.31%)</title><rect x="93.4783%" y="1364" width="0.3082%" height="15" fill="rgb(221,76,26)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1374.50"></text></g><g><title>get_call_template (numba/core/dispatcher.py:318) (19 samples, 0.31%)</title><rect x="93.4783%" y="1380" width="0.3082%" height="15" fill="rgb(225,139,18)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1390.50"></text></g><g><title>compile (numba/core/dispatcher.py:905) (19 samples, 0.31%)</title><rect x="93.4783%" y="1396" width="0.3082%" height="15" fill="rgb(230,137,11)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1406.50"></text></g><g><title>compile (numba/core/dispatcher.py:80) (19 samples, 0.31%)</title><rect x="93.4783%" y="1412" width="0.3082%" height="15" fill="rgb(212,28,1)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1422.50"></text></g><g><title>_compile_cached (numba/core/dispatcher.py:94) (19 samples, 0.31%)</title><rect x="93.4783%" y="1428" width="0.3082%" height="15" fill="rgb(248,164,17)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1438.50"></text></g><g><title>_compile_core (numba/core/dispatcher.py:107) (19 samples, 0.31%)</title><rect x="93.4783%" y="1444" width="0.3082%" height="15" fill="rgb(222,171,42)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1454.50"></text></g><g><title>compile_extra (numba/core/compiler.py:744) (19 samples, 0.31%)</title><rect x="93.4783%" y="1460" width="0.3082%" height="15" fill="rgb(243,84,45)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1470.50"></text></g><g><title>compile_extra (numba/core/compiler.py:438) (19 samples, 0.31%)</title><rect x="93.4783%" y="1476" width="0.3082%" height="15" fill="rgb(252,49,23)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1486.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:506) (19 samples, 0.31%)</title><rect x="93.4783%" y="1492" width="0.3082%" height="15" fill="rgb(215,19,7)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1502.50"></text></g><g><title>_compile_core (numba/core/compiler.py:472) (19 samples, 0.31%)</title><rect x="93.4783%" y="1508" width="0.3082%" height="15" fill="rgb(238,81,41)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1518.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (19 samples, 0.31%)</title><rect x="93.4783%" y="1524" width="0.3082%" height="15" fill="rgb(210,199,37)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1534.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (19 samples, 0.31%)</title><rect x="93.4783%" y="1540" width="0.3082%" height="15" fill="rgb(244,192,49)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1550.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (19 samples, 0.31%)</title><rect x="93.4783%" y="1556" width="0.3082%" height="15" fill="rgb(226,211,11)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1566.50"></text></g><g><title>check (numba/core/compiler_machinery.py:273) (19 samples, 0.31%)</title><rect x="93.4783%" y="1572" width="0.3082%" height="15" fill="rgb(236,162,54)" fg:x="5762" fg:w="19"/><text x="93.7283%" y="1582.50"></text></g><g><title>run_pass (numba/core/typed_passes.py:112) (49 samples, 0.79%)</title><rect x="93.0240%" y="772" width="0.7949%" height="15" fill="rgb(220,229,9)" fg:x="5734" fg:w="49"/><text x="93.2740%" y="782.50"></text></g><g><title>type_inference_stage (numba/core/typed_passes.py:93) (49 samples, 0.79%)</title><rect x="93.0240%" y="788" width="0.7949%" height="15" fill="rgb(250,87,22)" fg:x="5734" fg:w="49"/><text x="93.2740%" y="798.50"></text></g><g><title>propagate (numba/core/typeinfer.py:1083) (49 samples, 0.79%)</title><rect x="93.0240%" y="804" width="0.7949%" height="15" fill="rgb(239,43,17)" fg:x="5734" fg:w="49"/><text x="93.2740%" y="814.50"></text></g><g><title>propagate (numba/core/typeinfer.py:160) (49 samples, 0.79%)</title><rect x="93.0240%" y="820" width="0.7949%" height="15" fill="rgb(231,177,25)" fg:x="5734" fg:w="49"/><text x="93.2740%" y="830.50"></text></g><g><title>__call__ (numba/core/typeinfer.py:583) (49 samples, 0.79%)</title><rect x="93.0240%" y="836" width="0.7949%" height="15" fill="rgb(219,179,1)" fg:x="5734" fg:w="49"/><text x="93.2740%" y="846.50"></text></g><g><title>resolve (numba/core/typeinfer.py:606) (49 samples, 0.79%)</title><rect x="93.0240%" y="852" width="0.7949%" height="15" fill="rgb(238,219,53)" fg:x="5734" fg:w="49"/><text x="93.2740%" y="862.50"></text></g><g><title>resolve_call (numba/core/typeinfer.py:1577) (49 samples, 0.79%)</title><rect x="93.0240%" y="868" width="0.7949%" height="15" fill="rgb(232,167,36)" fg:x="5734" fg:w="49"/><text x="93.2740%" y="878.50"></text></g><g><title>resolve_function_type (numba/core/typing/context.py:196) (49 samples, 0.79%)</title><rect x="93.0240%" y="884" width="0.7949%" height="15" fill="rgb(244,19,51)" fg:x="5734" fg:w="49"/><text x="93.2740%" y="894.50"></text></g><g><title>_resolve_user_function_type (numba/core/typing/context.py:248) (49 samples, 0.79%)</title><rect x="93.0240%" y="900" width="0.7949%" height="15" fill="rgb(224,6,22)" fg:x="5734" fg:w="49"/><text x="93.2740%" y="910.50"></text></g><g><title>get_call_type (numba/core/types/functions.py:541) (22 samples, 0.36%)</title><rect x="93.4620%" y="916" width="0.3569%" height="15" fill="rgb(224,145,5)" fg:x="5761" fg:w="22"/><text x="93.7120%" y="926.50"></text></g><g><title>get_call_template (numba/core/dispatcher.py:318) (22 samples, 0.36%)</title><rect x="93.4620%" y="932" width="0.3569%" height="15" fill="rgb(234,130,49)" fg:x="5761" fg:w="22"/><text x="93.7120%" y="942.50"></text></g><g><title>compile (numba/core/dispatcher.py:905) (21 samples, 0.34%)</title><rect x="93.4783%" y="948" width="0.3407%" height="15" fill="rgb(254,6,2)" fg:x="5762" fg:w="21"/><text x="93.7283%" y="958.50"></text></g><g><title>compile (numba/core/dispatcher.py:80) (21 samples, 0.34%)</title><rect x="93.4783%" y="964" width="0.3407%" height="15" fill="rgb(208,96,46)" fg:x="5762" fg:w="21"/><text x="93.7283%" y="974.50"></text></g><g><title>_compile_cached (numba/core/dispatcher.py:94) (21 samples, 0.34%)</title><rect x="93.4783%" y="980" width="0.3407%" height="15" fill="rgb(239,3,39)" fg:x="5762" fg:w="21"/><text x="93.7283%" y="990.50"></text></g><g><title>_compile_core (numba/core/dispatcher.py:107) (21 samples, 0.34%)</title><rect x="93.4783%" y="996" width="0.3407%" height="15" fill="rgb(233,210,1)" fg:x="5762" fg:w="21"/><text x="93.7283%" y="1006.50"></text></g><g><title>compile_extra (numba/core/compiler.py:744) (21 samples, 0.34%)</title><rect x="93.4783%" y="1012" width="0.3407%" height="15" fill="rgb(244,137,37)" fg:x="5762" fg:w="21"/><text x="93.7283%" y="1022.50"></text></g><g><title>compile_extra (numba/core/compiler.py:438) (21 samples, 0.34%)</title><rect x="93.4783%" y="1028" width="0.3407%" height="15" fill="rgb(240,136,2)" fg:x="5762" fg:w="21"/><text x="93.7283%" y="1038.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:506) (21 samples, 0.34%)</title><rect x="93.4783%" y="1044" width="0.3407%" height="15" fill="rgb(239,18,37)" fg:x="5762" fg:w="21"/><text x="93.7283%" y="1054.50"></text></g><g><title>_compile_core (numba/core/compiler.py:472) (21 samples, 0.34%)</title><rect x="93.4783%" y="1060" width="0.3407%" height="15" fill="rgb(218,185,22)" fg:x="5762" fg:w="21"/><text x="93.7283%" y="1070.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (21 samples, 0.34%)</title><rect x="93.4783%" y="1076" width="0.3407%" height="15" fill="rgb(225,218,4)" fg:x="5762" fg:w="21"/><text x="93.7283%" y="1086.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (21 samples, 0.34%)</title><rect x="93.4783%" y="1092" width="0.3407%" height="15" fill="rgb(230,182,32)" fg:x="5762" fg:w="21"/><text x="93.7283%" y="1102.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (21 samples, 0.34%)</title><rect x="93.4783%" y="1108" width="0.3407%" height="15" fill="rgb(242,56,43)" fg:x="5762" fg:w="21"/><text x="93.7283%" y="1118.50"></text></g><g><title>check (numba/core/compiler_machinery.py:273) (21 samples, 0.34%)</title><rect x="93.4783%" y="1124" width="0.3407%" height="15" fill="rgb(233,99,24)" fg:x="5762" fg:w="21"/><text x="93.7283%" y="1134.50"></text></g><g><title>finalize (numba/core/codegen.py:762) (24 samples, 0.39%)</title><rect x="93.8676%" y="836" width="0.3894%" height="15" fill="rgb(234,209,42)" fg:x="5786" fg:w="24"/><text x="94.1176%" y="846.50"></text></g><g><title>_optimize_final_module (numba/core/codegen.py:682) (21 samples, 0.34%)</title><rect x="93.9163%" y="852" width="0.3407%" height="15" fill="rgb(227,7,12)" fg:x="5789" fg:w="21"/><text x="94.1663%" y="862.50"></text></g><g><title>run (llvmlite/binding/passmanagers.py:698) (21 samples, 0.34%)</title><rect x="93.9163%" y="868" width="0.3407%" height="15" fill="rgb(245,203,43)" fg:x="5789" fg:w="21"/><text x="94.1663%" y="878.50"></text></g><g><title>__call__ (llvmlite/binding/ffi.py:192) (21 samples, 0.34%)</title><rect x="93.9163%" y="884" width="0.3407%" height="15" fill="rgb(238,205,33)" fg:x="5789" fg:w="21"/><text x="94.1663%" y="894.50"></text></g><g><title>run_pass (numba/core/typed_passes.py:497) (39 samples, 0.63%)</title><rect x="93.8676%" y="772" width="0.6327%" height="15" fill="rgb(231,56,7)" fg:x="5786" fg:w="39"/><text x="94.1176%" y="782.50"></text></g><g><title>get_executable (numba/core/cpu.py:239) (39 samples, 0.63%)</title><rect x="93.8676%" y="788" width="0.6327%" height="15" fill="rgb(244,186,29)" fg:x="5786" fg:w="39"/><text x="94.1176%" y="798.50"></text></g><g><title>get_pointer_to_function (numba/core/codegen.py:989) (39 samples, 0.63%)</title><rect x="93.8676%" y="804" width="0.6327%" height="15" fill="rgb(234,111,31)" fg:x="5786" fg:w="39"/><text x="94.1176%" y="814.50"></text></g><g><title>_ensure_finalized (numba/core/codegen.py:567) (39 samples, 0.63%)</title><rect x="93.8676%" y="820" width="0.6327%" height="15" fill="rgb(241,149,10)" fg:x="5786" fg:w="39"/><text x="94.1176%" y="830.50"></text></g><g><title>finalize (numba/core/codegen.py:765) (15 samples, 0.24%)</title><rect x="94.2570%" y="836" width="0.2433%" height="15" fill="rgb(249,206,44)" fg:x="5810" fg:w="15"/><text x="94.5070%" y="846.50"></text></g><g><title>_finalize_final_module (numba/core/codegen.py:797) (15 samples, 0.24%)</title><rect x="94.2570%" y="852" width="0.2433%" height="15" fill="rgb(251,153,30)" fg:x="5810" fg:w="15"/><text x="94.5070%" y="862.50"></text></g><g><title>_finalize_specific (numba/core/codegen.py:999) (15 samples, 0.24%)</title><rect x="94.2570%" y="868" width="0.2433%" height="15" fill="rgb(239,152,38)" fg:x="5810" fg:w="15"/><text x="94.5070%" y="878.50"></text></g><g><title>wrapper (numba/core/codegen.py:1060) (15 samples, 0.24%)</title><rect x="94.2570%" y="884" width="0.2433%" height="15" fill="rgb(249,139,47)" fg:x="5810" fg:w="15"/><text x="94.5070%" y="894.50"></text></g><g><title>finalize_object (llvmlite/binding/executionengine.py:99) (15 samples, 0.24%)</title><rect x="94.2570%" y="900" width="0.2433%" height="15" fill="rgb(244,64,35)" fg:x="5810" fg:w="15"/><text x="94.5070%" y="910.50"></text></g><g><title>__call__ (llvmlite/binding/ffi.py:192) (15 samples, 0.24%)</title><rect x="94.2570%" y="916" width="0.2433%" height="15" fill="rgb(216,46,15)" fg:x="5810" fg:w="15"/><text x="94.5070%" y="926.50"></text></g><g><title>compile (numba/core/dispatcher.py:905) (92 samples, 1.49%)</title><rect x="93.0240%" y="580" width="1.4925%" height="15" fill="rgb(250,74,19)" fg:x="5734" fg:w="92"/><text x="93.2740%" y="590.50"></text></g><g><title>compile (numba/core/dispatcher.py:80) (92 samples, 1.49%)</title><rect x="93.0240%" y="596" width="1.4925%" height="15" fill="rgb(249,42,33)" fg:x="5734" fg:w="92"/><text x="93.2740%" y="606.50"></text></g><g><title>_compile_cached (numba/core/dispatcher.py:94) (92 samples, 1.49%)</title><rect x="93.0240%" y="612" width="1.4925%" height="15" fill="rgb(242,149,17)" fg:x="5734" fg:w="92"/><text x="93.2740%" y="622.50"></text></g><g><title>_compile_core (numba/core/dispatcher.py:107) (92 samples, 1.49%)</title><rect x="93.0240%" y="628" width="1.4925%" height="15" fill="rgb(244,29,21)" fg:x="5734" fg:w="92"/><text x="93.2740%" y="638.50"></text></g><g><title>compile_extra (numba/core/compiler.py:744) (92 samples, 1.49%)</title><rect x="93.0240%" y="644" width="1.4925%" height="15" fill="rgb(220,130,37)" fg:x="5734" fg:w="92"/><text x="93.2740%" y="654.50"></text></g><g><title>compile_extra (numba/core/compiler.py:438) (92 samples, 1.49%)</title><rect x="93.0240%" y="660" width="1.4925%" height="15" fill="rgb(211,67,2)" fg:x="5734" fg:w="92"/><text x="93.2740%" y="670.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:506) (92 samples, 1.49%)</title><rect x="93.0240%" y="676" width="1.4925%" height="15" fill="rgb(235,68,52)" fg:x="5734" fg:w="92"/><text x="93.2740%" y="686.50"></text></g><g><title>_compile_core (numba/core/compiler.py:472) (92 samples, 1.49%)</title><rect x="93.0240%" y="692" width="1.4925%" height="15" fill="rgb(246,142,3)" fg:x="5734" fg:w="92"/><text x="93.2740%" y="702.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (92 samples, 1.49%)</title><rect x="93.0240%" y="708" width="1.4925%" height="15" fill="rgb(241,25,7)" fg:x="5734" fg:w="92"/><text x="93.2740%" y="718.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (92 samples, 1.49%)</title><rect x="93.0240%" y="724" width="1.4925%" height="15" fill="rgb(242,119,39)" fg:x="5734" fg:w="92"/><text x="93.2740%" y="734.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (92 samples, 1.49%)</title><rect x="93.0240%" y="740" width="1.4925%" height="15" fill="rgb(241,98,45)" fg:x="5734" fg:w="92"/><text x="93.2740%" y="750.50"></text></g><g><title>check (numba/core/compiler_machinery.py:273) (92 samples, 1.49%)</title><rect x="93.0240%" y="756" width="1.4925%" height="15" fill="rgb(254,28,30)" fg:x="5734" fg:w="92"/><text x="93.2740%" y="766.50"></text></g><g><title>run_pass (numba/core/typed_passes.py:112) (95 samples, 1.54%)</title><rect x="93.0078%" y="404" width="1.5412%" height="15" fill="rgb(241,142,54)" fg:x="5733" fg:w="95"/><text x="93.2578%" y="414.50"></text></g><g><title>type_inference_stage (numba/core/typed_passes.py:93) (95 samples, 1.54%)</title><rect x="93.0078%" y="420" width="1.5412%" height="15" fill="rgb(222,85,15)" fg:x="5733" fg:w="95"/><text x="93.2578%" y="430.50"></text></g><g><title>propagate (numba/core/typeinfer.py:1083) (95 samples, 1.54%)</title><rect x="93.0078%" y="436" width="1.5412%" height="15" fill="rgb(210,85,47)" fg:x="5733" fg:w="95"/><text x="93.2578%" y="446.50"></text></g><g><title>propagate (numba/core/typeinfer.py:160) (95 samples, 1.54%)</title><rect x="93.0078%" y="452" width="1.5412%" height="15" fill="rgb(224,206,25)" fg:x="5733" fg:w="95"/><text x="93.2578%" y="462.50"></text></g><g><title>__call__ (numba/core/typeinfer.py:583) (95 samples, 1.54%)</title><rect x="93.0078%" y="468" width="1.5412%" height="15" fill="rgb(243,201,19)" fg:x="5733" fg:w="95"/><text x="93.2578%" y="478.50"></text></g><g><title>resolve (numba/core/typeinfer.py:606) (95 samples, 1.54%)</title><rect x="93.0078%" y="484" width="1.5412%" height="15" fill="rgb(236,59,4)" fg:x="5733" fg:w="95"/><text x="93.2578%" y="494.50"></text></g><g><title>resolve_call (numba/core/typeinfer.py:1577) (95 samples, 1.54%)</title><rect x="93.0078%" y="500" width="1.5412%" height="15" fill="rgb(254,179,45)" fg:x="5733" fg:w="95"/><text x="93.2578%" y="510.50"></text></g><g><title>resolve_function_type (numba/core/typing/context.py:196) (95 samples, 1.54%)</title><rect x="93.0078%" y="516" width="1.5412%" height="15" fill="rgb(226,14,10)" fg:x="5733" fg:w="95"/><text x="93.2578%" y="526.50"></text></g><g><title>_resolve_user_function_type (numba/core/typing/context.py:248) (95 samples, 1.54%)</title><rect x="93.0078%" y="532" width="1.5412%" height="15" fill="rgb(244,27,41)" fg:x="5733" fg:w="95"/><text x="93.2578%" y="542.50"></text></g><g><title>get_call_type (numba/core/types/functions.py:541) (94 samples, 1.52%)</title><rect x="93.0240%" y="548" width="1.5250%" height="15" fill="rgb(235,35,32)" fg:x="5734" fg:w="94"/><text x="93.2740%" y="558.50"></text></g><g><title>get_call_template (numba/core/dispatcher.py:318) (94 samples, 1.52%)</title><rect x="93.0240%" y="564" width="1.5250%" height="15" fill="rgb(218,68,31)" fg:x="5734" fg:w="94"/><text x="93.2740%" y="574.50"></text></g><g><title>compile (numba/core/ccallback.py:68) (96 samples, 1.56%)</title><rect x="93.0078%" y="196" width="1.5574%" height="15" fill="rgb(207,120,37)" fg:x="5733" fg:w="96"/><text x="93.2578%" y="206.50"></text></g><g><title>_compile_uncached (numba/core/ccallback.py:82) (96 samples, 1.56%)</title><rect x="93.0078%" y="212" width="1.5574%" height="15" fill="rgb(227,98,0)" fg:x="5733" fg:w="96"/><text x="93.2578%" y="222.50"></text></g><g><title>compile (numba/core/dispatcher.py:80) (96 samples, 1.56%)</title><rect x="93.0078%" y="228" width="1.5574%" height="15" fill="rgb(207,7,3)" fg:x="5733" fg:w="96"/><text x="93.2578%" y="238.50"></text></g><g><title>_compile_cached (numba/core/dispatcher.py:94) (96 samples, 1.56%)</title><rect x="93.0078%" y="244" width="1.5574%" height="15" fill="rgb(206,98,19)" fg:x="5733" fg:w="96"/><text x="93.2578%" y="254.50"></text></g><g><title>_compile_core (numba/core/dispatcher.py:107) (96 samples, 1.56%)</title><rect x="93.0078%" y="260" width="1.5574%" height="15" fill="rgb(217,5,26)" fg:x="5733" fg:w="96"/><text x="93.2578%" y="270.50"></text></g><g><title>compile_extra (numba/core/compiler.py:744) (96 samples, 1.56%)</title><rect x="93.0078%" y="276" width="1.5574%" height="15" fill="rgb(235,190,38)" fg:x="5733" fg:w="96"/><text x="93.2578%" y="286.50"></text></g><g><title>compile_extra (numba/core/compiler.py:438) (96 samples, 1.56%)</title><rect x="93.0078%" y="292" width="1.5574%" height="15" fill="rgb(247,86,24)" fg:x="5733" fg:w="96"/><text x="93.2578%" y="302.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:506) (96 samples, 1.56%)</title><rect x="93.0078%" y="308" width="1.5574%" height="15" fill="rgb(205,101,16)" fg:x="5733" fg:w="96"/><text x="93.2578%" y="318.50"></text></g><g><title>_compile_core (numba/core/compiler.py:472) (96 samples, 1.56%)</title><rect x="93.0078%" y="324" width="1.5574%" height="15" fill="rgb(246,168,33)" fg:x="5733" fg:w="96"/><text x="93.2578%" y="334.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (96 samples, 1.56%)</title><rect x="93.0078%" y="340" width="1.5574%" height="15" fill="rgb(231,114,1)" fg:x="5733" fg:w="96"/><text x="93.2578%" y="350.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (96 samples, 1.56%)</title><rect x="93.0078%" y="356" width="1.5574%" height="15" fill="rgb(207,184,53)" fg:x="5733" fg:w="96"/><text x="93.2578%" y="366.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (96 samples, 1.56%)</title><rect x="93.0078%" y="372" width="1.5574%" height="15" fill="rgb(224,95,51)" fg:x="5733" fg:w="96"/><text x="93.2578%" y="382.50"></text></g><g><title>check (numba/core/compiler_machinery.py:273) (96 samples, 1.56%)</title><rect x="93.0078%" y="388" width="1.5574%" height="15" fill="rgb(212,188,45)" fg:x="5733" fg:w="96"/><text x="93.2578%" y="398.50"></text></g><g><title>finalize (numba/core/codegen.py:762) (50 samples, 0.81%)</title><rect x="94.5652%" y="244" width="0.8112%" height="15" fill="rgb(223,154,38)" fg:x="5829" fg:w="50"/><text x="94.8152%" y="254.50"></text></g><g><title>_optimize_final_module (numba/core/codegen.py:682) (47 samples, 0.76%)</title><rect x="94.6139%" y="260" width="0.7625%" height="15" fill="rgb(251,22,52)" fg:x="5832" fg:w="47"/><text x="94.8639%" y="270.50"></text></g><g><title>run (llvmlite/binding/passmanagers.py:698) (47 samples, 0.76%)</title><rect x="94.6139%" y="276" width="0.7625%" height="15" fill="rgb(229,209,22)" fg:x="5832" fg:w="47"/><text x="94.8639%" y="286.50"></text></g><g><title>__call__ (llvmlite/binding/ffi.py:192) (47 samples, 0.76%)</title><rect x="94.6139%" y="292" width="0.7625%" height="15" fill="rgb(234,138,34)" fg:x="5832" fg:w="47"/><text x="94.8639%" y="302.50"></text></g><g><title>__init__ (pymc_bart/pgbart.py:125) (243 samples, 3.94%)</title><rect x="91.8397%" y="116" width="3.9422%" height="15" fill="rgb(212,95,11)" fg:x="5661" fg:w="243"/><text x="92.0897%" y="126.50">__in..</text></g><g><title>__init__ (pymc_bart/compile_pymc.py:43) (171 samples, 2.77%)</title><rect x="93.0078%" y="132" width="2.7742%" height="15" fill="rgb(240,179,47)" fg:x="5733" fg:w="171"/><text x="93.2578%" y="142.50">__..</text></g><g><title>_generate_logp_function (pymc_bart/compile_pymc.py:113) (171 samples, 2.77%)</title><rect x="93.0078%" y="148" width="2.7742%" height="15" fill="rgb(240,163,11)" fg:x="5733" fg:w="171"/><text x="93.2578%" y="158.50">_g..</text></g><g><title>wrapper (numba/core/decorators.py:275) (171 samples, 2.77%)</title><rect x="93.0078%" y="164" width="2.7742%" height="15" fill="rgb(236,37,12)" fg:x="5733" fg:w="171"/><text x="93.2578%" y="174.50">wr..</text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (171 samples, 2.77%)</title><rect x="93.0078%" y="180" width="2.7742%" height="15" fill="rgb(232,164,16)" fg:x="5733" fg:w="171"/><text x="93.2578%" y="190.50">_a..</text></g><g><title>compile (numba/core/ccallback.py:75) (75 samples, 1.22%)</title><rect x="94.5652%" y="196" width="1.2167%" height="15" fill="rgb(244,205,15)" fg:x="5829" fg:w="75"/><text x="94.8152%" y="206.50"></text></g><g><title>get_pointer_to_function (numba/core/codegen.py:989) (75 samples, 1.22%)</title><rect x="94.5652%" y="212" width="1.2167%" height="15" fill="rgb(223,117,47)" fg:x="5829" fg:w="75"/><text x="94.8152%" y="222.50"></text></g><g><title>_ensure_finalized (numba/core/codegen.py:567) (75 samples, 1.22%)</title><rect x="94.5652%" y="228" width="1.2167%" height="15" fill="rgb(244,107,35)" fg:x="5829" fg:w="75"/><text x="94.8152%" y="238.50"></text></g><g><title>finalize (numba/core/codegen.py:765) (25 samples, 0.41%)</title><rect x="95.3764%" y="244" width="0.4056%" height="15" fill="rgb(205,140,8)" fg:x="5879" fg:w="25"/><text x="95.6264%" y="254.50"></text></g><g><title>_finalize_final_module (numba/core/codegen.py:797) (25 samples, 0.41%)</title><rect x="95.3764%" y="260" width="0.4056%" height="15" fill="rgb(228,84,46)" fg:x="5879" fg:w="25"/><text x="95.6264%" y="270.50"></text></g><g><title>_finalize_specific (numba/core/codegen.py:999) (25 samples, 0.41%)</title><rect x="95.3764%" y="276" width="0.4056%" height="15" fill="rgb(254,188,9)" fg:x="5879" fg:w="25"/><text x="95.6264%" y="286.50"></text></g><g><title>wrapper (numba/core/codegen.py:1060) (25 samples, 0.41%)</title><rect x="95.3764%" y="292" width="0.4056%" height="15" fill="rgb(206,112,54)" fg:x="5879" fg:w="25"/><text x="95.6264%" y="302.50"></text></g><g><title>finalize_object (llvmlite/binding/executionengine.py:99) (25 samples, 0.41%)</title><rect x="95.3764%" y="308" width="0.4056%" height="15" fill="rgb(216,84,49)" fg:x="5879" fg:w="25"/><text x="95.6264%" y="318.50"></text></g><g><title>__call__ (llvmlite/binding/ffi.py:192) (25 samples, 0.41%)</title><rect x="95.3764%" y="324" width="0.4056%" height="15" fill="rgb(214,194,35)" fg:x="5879" fg:w="25"/><text x="95.6264%" y="334.50"></text></g><g><title>&lt;module&gt; (bart_examples.py:109) (5,905 samples, 95.80%)</title><rect x="0.0324%" y="68" width="95.7982%" height="15" fill="rgb(249,28,3)" fg:x="2" fg:w="5905"/><text x="0.2824%" y="78.50">&lt;module&gt; (bart_examples.py:109)</text></g><g><title>main (bart_examples.py:91) (5,905 samples, 95.80%)</title><rect x="0.0324%" y="84" width="95.7982%" height="15" fill="rgb(222,56,52)" fg:x="2" fg:w="5905"/><text x="0.2824%" y="94.50">main (bart_examples.py:91)</text></g><g><title>test_coal (bart_examples.py:83) (246 samples, 3.99%)</title><rect x="91.8397%" y="100" width="3.9909%" height="15" fill="rgb(245,217,50)" fg:x="5661" fg:w="246"/><text x="92.0897%" y="110.50">test..</text></g><g><title>&lt;module&gt; (bart_examples.py:3) (8 samples, 0.13%)</title><rect x="95.8306%" y="68" width="0.1298%" height="15" fill="rgb(213,201,24)" fg:x="5907" fg:w="8"/><text x="96.0806%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (8 samples, 0.13%)</title><rect x="95.8306%" y="84" width="0.1298%" height="15" fill="rgb(248,116,28)" fg:x="5907" fg:w="8"/><text x="96.0806%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (8 samples, 0.13%)</title><rect x="95.8306%" y="100" width="0.1298%" height="15" fill="rgb(219,72,43)" fg:x="5907" fg:w="8"/><text x="96.0806%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (8 samples, 0.13%)</title><rect x="95.8306%" y="116" width="0.1298%" height="15" fill="rgb(209,138,14)" fg:x="5907" fg:w="8"/><text x="96.0806%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (8 samples, 0.13%)</title><rect x="95.8306%" y="132" width="0.1298%" height="15" fill="rgb(222,18,33)" fg:x="5907" fg:w="8"/><text x="96.0806%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (8 samples, 0.13%)</title><rect x="95.8306%" y="148" width="0.1298%" height="15" fill="rgb(213,199,7)" fg:x="5907" fg:w="8"/><text x="96.0806%" y="158.50"></text></g><g><title>&lt;module&gt; (bart_examples.py:4) (17 samples, 0.28%)</title><rect x="95.9604%" y="68" width="0.2758%" height="15" fill="rgb(250,110,10)" fg:x="5915" fg:w="17"/><text x="96.2104%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (17 samples, 0.28%)</title><rect x="95.9604%" y="84" width="0.2758%" height="15" fill="rgb(248,123,6)" fg:x="5915" fg:w="17"/><text x="96.2104%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (17 samples, 0.28%)</title><rect x="95.9604%" y="100" width="0.2758%" height="15" fill="rgb(206,91,31)" fg:x="5915" fg:w="17"/><text x="96.2104%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (17 samples, 0.28%)</title><rect x="95.9604%" y="116" width="0.2758%" height="15" fill="rgb(211,154,13)" fg:x="5915" fg:w="17"/><text x="96.2104%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (17 samples, 0.28%)</title><rect x="95.9604%" y="132" width="0.2758%" height="15" fill="rgb(225,148,7)" fg:x="5915" fg:w="17"/><text x="96.2104%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (17 samples, 0.28%)</title><rect x="95.9604%" y="148" width="0.2758%" height="15" fill="rgb(220,160,43)" fg:x="5915" fg:w="17"/><text x="96.2104%" y="158.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:49) (9 samples, 0.15%)</title><rect x="96.0902%" y="164" width="0.1460%" height="15" fill="rgb(213,52,39)" fg:x="5923" fg:w="9"/><text x="96.3402%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (9 samples, 0.15%)</title><rect x="96.0902%" y="180" width="0.1460%" height="15" fill="rgb(243,137,7)" fg:x="5923" fg:w="9"/><text x="96.3402%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (9 samples, 0.15%)</title><rect x="96.0902%" y="196" width="0.1460%" height="15" fill="rgb(230,79,13)" fg:x="5923" fg:w="9"/><text x="96.3402%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (9 samples, 0.15%)</title><rect x="96.0902%" y="212" width="0.1460%" height="15" fill="rgb(247,105,23)" fg:x="5923" fg:w="9"/><text x="96.3402%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (9 samples, 0.15%)</title><rect x="96.0902%" y="228" width="0.1460%" height="15" fill="rgb(223,179,41)" fg:x="5923" fg:w="9"/><text x="96.3402%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (9 samples, 0.15%)</title><rect x="96.0902%" y="244" width="0.1460%" height="15" fill="rgb(218,9,34)" fg:x="5923" fg:w="9"/><text x="96.3402%" y="254.50"></text></g><g><title>&lt;module&gt; (pytensor/scalar/__init__.py:1) (10 samples, 0.16%)</title><rect x="96.3011%" y="404" width="0.1622%" height="15" fill="rgb(222,106,8)" fg:x="5936" fg:w="10"/><text x="96.5511%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (10 samples, 0.16%)</title><rect x="96.3011%" y="420" width="0.1622%" height="15" fill="rgb(211,220,0)" fg:x="5936" fg:w="10"/><text x="96.5511%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (10 samples, 0.16%)</title><rect x="96.3011%" y="436" width="0.1622%" height="15" fill="rgb(229,52,16)" fg:x="5936" fg:w="10"/><text x="96.5511%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (10 samples, 0.16%)</title><rect x="96.3011%" y="452" width="0.1622%" height="15" fill="rgb(212,155,18)" fg:x="5936" fg:w="10"/><text x="96.5511%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (9 samples, 0.15%)</title><rect x="96.3173%" y="468" width="0.1460%" height="15" fill="rgb(242,21,14)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (9 samples, 0.15%)</title><rect x="96.3173%" y="484" width="0.1460%" height="15" fill="rgb(222,19,48)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="494.50"></text></g><g><title>&lt;module&gt; (pytensor/scalar/basic.py:24) (9 samples, 0.15%)</title><rect x="96.3173%" y="500" width="0.1460%" height="15" fill="rgb(232,45,27)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (9 samples, 0.15%)</title><rect x="96.3173%" y="516" width="0.1460%" height="15" fill="rgb(249,103,42)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (9 samples, 0.15%)</title><rect x="96.3173%" y="532" width="0.1460%" height="15" fill="rgb(246,81,33)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (9 samples, 0.15%)</title><rect x="96.3173%" y="548" width="0.1460%" height="15" fill="rgb(252,33,42)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (9 samples, 0.15%)</title><rect x="96.3173%" y="564" width="0.1460%" height="15" fill="rgb(209,212,41)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (9 samples, 0.15%)</title><rect x="96.3173%" y="580" width="0.1460%" height="15" fill="rgb(207,154,6)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (9 samples, 0.15%)</title><rect x="96.3173%" y="596" width="0.1460%" height="15" fill="rgb(223,64,47)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (9 samples, 0.15%)</title><rect x="96.3173%" y="612" width="0.1460%" height="15" fill="rgb(211,161,38)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="622.50"></text></g><g><title>&lt;module&gt; (pytensor/printing.py:17) (9 samples, 0.15%)</title><rect x="96.3173%" y="628" width="0.1460%" height="15" fill="rgb(219,138,40)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (9 samples, 0.15%)</title><rect x="96.3173%" y="644" width="0.1460%" height="15" fill="rgb(241,228,46)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (9 samples, 0.15%)</title><rect x="96.3173%" y="660" width="0.1460%" height="15" fill="rgb(223,209,38)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (9 samples, 0.15%)</title><rect x="96.3173%" y="676" width="0.1460%" height="15" fill="rgb(236,164,45)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (9 samples, 0.15%)</title><rect x="96.3173%" y="692" width="0.1460%" height="15" fill="rgb(231,15,5)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (9 samples, 0.15%)</title><rect x="96.3173%" y="708" width="0.1460%" height="15" fill="rgb(252,35,15)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="718.50"></text></g><g><title>&lt;module&gt; (pytensor/compile/__init__.py:1) (9 samples, 0.15%)</title><rect x="96.3173%" y="724" width="0.1460%" height="15" fill="rgb(248,181,18)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (9 samples, 0.15%)</title><rect x="96.3173%" y="740" width="0.1460%" height="15" fill="rgb(233,39,42)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (9 samples, 0.15%)</title><rect x="96.3173%" y="756" width="0.1460%" height="15" fill="rgb(238,110,33)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (9 samples, 0.15%)</title><rect x="96.3173%" y="772" width="0.1460%" height="15" fill="rgb(233,195,10)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (9 samples, 0.15%)</title><rect x="96.3173%" y="788" width="0.1460%" height="15" fill="rgb(254,105,3)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (9 samples, 0.15%)</title><rect x="96.3173%" y="804" width="0.1460%" height="15" fill="rgb(221,225,9)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (9 samples, 0.15%)</title><rect x="96.3173%" y="820" width="0.1460%" height="15" fill="rgb(224,227,45)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (9 samples, 0.15%)</title><rect x="96.3173%" y="836" width="0.1460%" height="15" fill="rgb(229,198,43)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (9 samples, 0.15%)</title><rect x="96.3173%" y="852" width="0.1460%" height="15" fill="rgb(206,209,35)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="862.50"></text></g><g><title>&lt;module&gt; (pytensor/compile/function/__init__.py:10) (9 samples, 0.15%)</title><rect x="96.3173%" y="868" width="0.1460%" height="15" fill="rgb(245,195,53)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (9 samples, 0.15%)</title><rect x="96.3173%" y="884" width="0.1460%" height="15" fill="rgb(240,92,26)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (9 samples, 0.15%)</title><rect x="96.3173%" y="900" width="0.1460%" height="15" fill="rgb(207,40,23)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (9 samples, 0.15%)</title><rect x="96.3173%" y="916" width="0.1460%" height="15" fill="rgb(223,111,35)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (9 samples, 0.15%)</title><rect x="96.3173%" y="932" width="0.1460%" height="15" fill="rgb(229,147,28)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (9 samples, 0.15%)</title><rect x="96.3173%" y="948" width="0.1460%" height="15" fill="rgb(211,29,28)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="958.50"></text></g><g><title>&lt;module&gt; (pytensor/compile/mode.py:28) (9 samples, 0.15%)</title><rect x="96.3173%" y="964" width="0.1460%" height="15" fill="rgb(228,72,33)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (9 samples, 0.15%)</title><rect x="96.3173%" y="980" width="0.1460%" height="15" fill="rgb(205,214,31)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (9 samples, 0.15%)</title><rect x="96.3173%" y="996" width="0.1460%" height="15" fill="rgb(224,111,15)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (9 samples, 0.15%)</title><rect x="96.3173%" y="1012" width="0.1460%" height="15" fill="rgb(253,21,26)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (9 samples, 0.15%)</title><rect x="96.3173%" y="1028" width="0.1460%" height="15" fill="rgb(245,139,43)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (9 samples, 0.15%)</title><rect x="96.3173%" y="1044" width="0.1460%" height="15" fill="rgb(252,170,7)" fg:x="5937" fg:w="9"/><text x="96.5673%" y="1054.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:610) (10 samples, 0.16%)</title><rect x="96.5120%" y="596" width="0.1622%" height="15" fill="rgb(231,118,14)" fg:x="5949" fg:w="10"/><text x="96.7620%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (10 samples, 0.16%)</title><rect x="96.5120%" y="612" width="0.1622%" height="15" fill="rgb(238,83,0)" fg:x="5949" fg:w="10"/><text x="96.7620%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (10 samples, 0.16%)</title><rect x="96.5120%" y="628" width="0.1622%" height="15" fill="rgb(221,39,39)" fg:x="5949" fg:w="10"/><text x="96.7620%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (10 samples, 0.16%)</title><rect x="96.5120%" y="644" width="0.1622%" height="15" fill="rgb(222,119,46)" fg:x="5949" fg:w="10"/><text x="96.7620%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (10 samples, 0.16%)</title><rect x="96.5120%" y="660" width="0.1622%" height="15" fill="rgb(222,165,49)" fg:x="5949" fg:w="10"/><text x="96.7620%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (10 samples, 0.16%)</title><rect x="96.5120%" y="676" width="0.1622%" height="15" fill="rgb(219,113,52)" fg:x="5949" fg:w="10"/><text x="96.7620%" y="686.50"></text></g><g><title>&lt;module&gt; (pytensor/scalar/__init__.py:2) (15 samples, 0.24%)</title><rect x="96.4633%" y="404" width="0.2433%" height="15" fill="rgb(214,7,15)" fg:x="5946" fg:w="15"/><text x="96.7133%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (15 samples, 0.24%)</title><rect x="96.4633%" y="420" width="0.2433%" height="15" fill="rgb(235,32,4)" fg:x="5946" fg:w="15"/><text x="96.7133%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (15 samples, 0.24%)</title><rect x="96.4633%" y="436" width="0.2433%" height="15" fill="rgb(238,90,54)" fg:x="5946" fg:w="15"/><text x="96.7133%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (15 samples, 0.24%)</title><rect x="96.4633%" y="452" width="0.2433%" height="15" fill="rgb(213,208,19)" fg:x="5946" fg:w="15"/><text x="96.7133%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (15 samples, 0.24%)</title><rect x="96.4633%" y="468" width="0.2433%" height="15" fill="rgb(233,156,4)" fg:x="5946" fg:w="15"/><text x="96.7133%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (15 samples, 0.24%)</title><rect x="96.4633%" y="484" width="0.2433%" height="15" fill="rgb(207,194,5)" fg:x="5946" fg:w="15"/><text x="96.7133%" y="494.50"></text></g><g><title>&lt;module&gt; (pytensor/scalar/math.py:13) (12 samples, 0.19%)</title><rect x="96.5120%" y="500" width="0.1947%" height="15" fill="rgb(206,111,30)" fg:x="5949" fg:w="12"/><text x="96.7620%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (12 samples, 0.19%)</title><rect x="96.5120%" y="516" width="0.1947%" height="15" fill="rgb(243,70,54)" fg:x="5949" fg:w="12"/><text x="96.7620%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (12 samples, 0.19%)</title><rect x="96.5120%" y="532" width="0.1947%" height="15" fill="rgb(242,28,8)" fg:x="5949" fg:w="12"/><text x="96.7620%" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (12 samples, 0.19%)</title><rect x="96.5120%" y="548" width="0.1947%" height="15" fill="rgb(219,106,18)" fg:x="5949" fg:w="12"/><text x="96.7620%" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (12 samples, 0.19%)</title><rect x="96.5120%" y="564" width="0.1947%" height="15" fill="rgb(244,222,10)" fg:x="5949" fg:w="12"/><text x="96.7620%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (12 samples, 0.19%)</title><rect x="96.5120%" y="580" width="0.1947%" height="15" fill="rgb(236,179,52)" fg:x="5949" fg:w="12"/><text x="96.7620%" y="590.50"></text></g><g><title>&lt;module&gt; (pytensor/tensor/__init__.py:103) (11 samples, 0.18%)</title><rect x="96.7067%" y="404" width="0.1785%" height="15" fill="rgb(213,23,39)" fg:x="5961" fg:w="11"/><text x="96.9567%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (11 samples, 0.18%)</title><rect x="96.7067%" y="420" width="0.1785%" height="15" fill="rgb(238,48,10)" fg:x="5961" fg:w="11"/><text x="96.9567%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (11 samples, 0.18%)</title><rect x="96.7067%" y="436" width="0.1785%" height="15" fill="rgb(251,196,23)" fg:x="5961" fg:w="11"/><text x="96.9567%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (11 samples, 0.18%)</title><rect x="96.7067%" y="452" width="0.1785%" height="15" fill="rgb(250,152,24)" fg:x="5961" fg:w="11"/><text x="96.9567%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (11 samples, 0.18%)</title><rect x="96.7067%" y="468" width="0.1785%" height="15" fill="rgb(209,150,17)" fg:x="5961" fg:w="11"/><text x="96.9567%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (11 samples, 0.18%)</title><rect x="96.7067%" y="484" width="0.1785%" height="15" fill="rgb(234,202,34)" fg:x="5961" fg:w="11"/><text x="96.9567%" y="494.50"></text></g><g><title>&lt;module&gt; (pytensor/__init__.py:119) (37 samples, 0.60%)</title><rect x="96.3011%" y="276" width="0.6003%" height="15" fill="rgb(253,148,53)" fg:x="5936" fg:w="37"/><text x="96.5511%" y="286.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (37 samples, 0.60%)</title><rect x="96.3011%" y="292" width="0.6003%" height="15" fill="rgb(218,129,16)" fg:x="5936" fg:w="37"/><text x="96.5511%" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (37 samples, 0.60%)</title><rect x="96.3011%" y="308" width="0.6003%" height="15" fill="rgb(216,85,19)" fg:x="5936" fg:w="37"/><text x="96.5511%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (37 samples, 0.60%)</title><rect x="96.3011%" y="324" width="0.6003%" height="15" fill="rgb(235,228,7)" fg:x="5936" fg:w="37"/><text x="96.5511%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (37 samples, 0.60%)</title><rect x="96.3011%" y="340" width="0.6003%" height="15" fill="rgb(245,175,0)" fg:x="5936" fg:w="37"/><text x="96.5511%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (37 samples, 0.60%)</title><rect x="96.3011%" y="356" width="0.6003%" height="15" fill="rgb(208,168,36)" fg:x="5936" fg:w="37"/><text x="96.5511%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (37 samples, 0.60%)</title><rect x="96.3011%" y="372" width="0.6003%" height="15" fill="rgb(246,171,24)" fg:x="5936" fg:w="37"/><text x="96.5511%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (37 samples, 0.60%)</title><rect x="96.3011%" y="388" width="0.6003%" height="15" fill="rgb(215,142,24)" fg:x="5936" fg:w="37"/><text x="96.5511%" y="398.50"></text></g><g><title>&lt;module&gt; (pymc/__init__.py:48) (42 samples, 0.68%)</title><rect x="96.3011%" y="164" width="0.6814%" height="15" fill="rgb(250,187,7)" fg:x="5936" fg:w="42"/><text x="96.5511%" y="174.50"></text></g><g><title>__set_compiler_flags (pymc/__init__.py:31) (42 samples, 0.68%)</title><rect x="96.3011%" y="180" width="0.6814%" height="15" fill="rgb(228,66,33)" fg:x="5936" fg:w="42"/><text x="96.5511%" y="190.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (42 samples, 0.68%)</title><rect x="96.3011%" y="196" width="0.6814%" height="15" fill="rgb(234,215,21)" fg:x="5936" fg:w="42"/><text x="96.5511%" y="206.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (42 samples, 0.68%)</title><rect x="96.3011%" y="212" width="0.6814%" height="15" fill="rgb(222,191,20)" fg:x="5936" fg:w="42"/><text x="96.5511%" y="222.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (42 samples, 0.68%)</title><rect x="96.3011%" y="228" width="0.6814%" height="15" fill="rgb(245,79,54)" fg:x="5936" fg:w="42"/><text x="96.5511%" y="238.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (42 samples, 0.68%)</title><rect x="96.3011%" y="244" width="0.6814%" height="15" fill="rgb(240,10,37)" fg:x="5936" fg:w="42"/><text x="96.5511%" y="254.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (42 samples, 0.68%)</title><rect x="96.3011%" y="260" width="0.6814%" height="15" fill="rgb(214,192,32)" fg:x="5936" fg:w="42"/><text x="96.5511%" y="270.50"></text></g><g><title>refresh (numba/core/base.py:267) (9 samples, 0.15%)</title><rect x="97.0960%" y="1252" width="0.1460%" height="15" fill="rgb(209,36,54)" fg:x="5985" fg:w="9"/><text x="97.3460%" y="1262.50"></text></g><g><title>install_registry (numba/core/typing/context.py:481) (9 samples, 0.15%)</title><rect x="97.2421%" y="1300" width="0.1460%" height="15" fill="rgb(220,10,11)" fg:x="5994" fg:w="9"/><text x="97.4921%" y="1310.50"></text></g><g><title>compile_extra (numba/core/compiler.py:743) (20 samples, 0.32%)</title><rect x="97.0960%" y="1124" width="0.3245%" height="15" fill="rgb(221,106,17)" fg:x="5985" fg:w="20"/><text x="97.3460%" y="1134.50"></text></g><g><title>__init__ (numba/core/compiler.py:394) (20 samples, 0.32%)</title><rect x="97.0960%" y="1140" width="0.3245%" height="15" fill="rgb(251,142,44)" fg:x="5985" fg:w="20"/><text x="97.3460%" y="1150.50"></text></g><g><title>refresh (numba/core/typing/context.py:160) (20 samples, 0.32%)</title><rect x="97.0960%" y="1156" width="0.3245%" height="15" fill="rgb(238,13,15)" fg:x="5985" fg:w="20"/><text x="97.3460%" y="1166.50"></text></g><g><title>_load_builtins (numba/core/typing/context.py:421) (20 samples, 0.32%)</title><rect x="97.0960%" y="1172" width="0.3245%" height="15" fill="rgb(208,107,27)" fg:x="5985" fg:w="20"/><text x="97.3460%" y="1182.50"></text></g><g><title>install_registry (numba/core/typing/context.py:485) (20 samples, 0.32%)</title><rect x="97.0960%" y="1188" width="0.3245%" height="15" fill="rgb(205,136,37)" fg:x="5985" fg:w="20"/><text x="97.3460%" y="1198.50"></text></g><g><title>__init__ (numba/core/typing/templates.py:1049) (20 samples, 0.32%)</title><rect x="97.0960%" y="1204" width="0.3245%" height="15" fill="rgb(250,205,27)" fg:x="5985" fg:w="20"/><text x="97.3460%" y="1214.50"></text></g><g><title>_init_once (numba/core/typing/templates.py:1098) (20 samples, 0.32%)</title><rect x="97.0960%" y="1220" width="0.3245%" height="15" fill="rgb(210,80,43)" fg:x="5985" fg:w="20"/><text x="97.3460%" y="1230.50"></text></g><g><title>_get_target_registry (numba/core/typing/templates.py:939) (20 samples, 0.32%)</title><rect x="97.0960%" y="1236" width="0.3245%" height="15" fill="rgb(247,160,36)" fg:x="5985" fg:w="20"/><text x="97.3460%" y="1246.50"></text></g><g><title>refresh (numba/core/base.py:277) (11 samples, 0.18%)</title><rect x="97.2421%" y="1252" width="0.1785%" height="15" fill="rgb(234,13,49)" fg:x="5994" fg:w="11"/><text x="97.4921%" y="1262.50"></text></g><g><title>refresh (numba/core/typing/context.py:160) (11 samples, 0.18%)</title><rect x="97.2421%" y="1268" width="0.1785%" height="15" fill="rgb(234,122,0)" fg:x="5994" fg:w="11"/><text x="97.4921%" y="1278.50"></text></g><g><title>_load_builtins (numba/core/typing/context.py:421) (11 samples, 0.18%)</title><rect x="97.2421%" y="1284" width="0.1785%" height="15" fill="rgb(207,146,38)" fg:x="5994" fg:w="11"/><text x="97.4921%" y="1294.50"></text></g><g><title>lower_expr (numba/core/lowering.py:1172) (10 samples, 0.16%)</title><rect x="97.5178%" y="1364" width="0.1622%" height="15" fill="rgb(207,177,25)" fg:x="6011" fg:w="10"/><text x="97.7678%" y="1374.50"></text></g><g><title>lower_binop (numba/core/lowering.py:793) (10 samples, 0.16%)</title><rect x="97.5178%" y="1380" width="0.1622%" height="15" fill="rgb(211,178,42)" fg:x="6011" fg:w="10"/><text x="97.7678%" y="1390.50"></text></g><g><title>__call__ (numba/core/base.py:1190) (10 samples, 0.16%)</title><rect x="97.5178%" y="1396" width="0.1622%" height="15" fill="rgb(230,69,54)" fg:x="6011" fg:w="10"/><text x="97.7678%" y="1406.50"></text></g><g><title>wrapper (numba/core/base.py:1220) (10 samples, 0.16%)</title><rect x="97.5178%" y="1412" width="0.1622%" height="15" fill="rgb(214,135,41)" fg:x="6011" fg:w="10"/><text x="97.7678%" y="1422.50"></text></g><g><title>int_power_impl (numba/cpython/numbers.py:245) (10 samples, 0.16%)</title><rect x="97.5178%" y="1428" width="0.1622%" height="15" fill="rgb(237,67,25)" fg:x="6011" fg:w="10"/><text x="97.7678%" y="1438.50"></text></g><g><title>compile_internal (numba/core/base.py:881) (10 samples, 0.16%)</title><rect x="97.5178%" y="1444" width="0.1622%" height="15" fill="rgb(222,189,50)" fg:x="6011" fg:w="10"/><text x="97.7678%" y="1454.50"></text></g><g><title>compile_subroutine (numba/core/base.py:866) (10 samples, 0.16%)</title><rect x="97.5178%" y="1460" width="0.1622%" height="15" fill="rgb(245,148,34)" fg:x="6011" fg:w="10"/><text x="97.7678%" y="1470.50"></text></g><g><title>_compile_subroutine_no_cache (numba/core/base.py:837) (10 samples, 0.16%)</title><rect x="97.5178%" y="1476" width="0.1622%" height="15" fill="rgb(222,29,6)" fg:x="6011" fg:w="10"/><text x="97.7678%" y="1486.50"></text></g><g><title>compile_internal (numba/core/compiler.py:818) (10 samples, 0.16%)</title><rect x="97.5178%" y="1492" width="0.1622%" height="15" fill="rgb(221,189,43)" fg:x="6011" fg:w="10"/><text x="97.7678%" y="1502.50"></text></g><g><title>compile_extra (numba/core/compiler.py:438) (10 samples, 0.16%)</title><rect x="97.5178%" y="1508" width="0.1622%" height="15" fill="rgb(207,36,27)" fg:x="6011" fg:w="10"/><text x="97.7678%" y="1518.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:506) (10 samples, 0.16%)</title><rect x="97.5178%" y="1524" width="0.1622%" height="15" fill="rgb(217,90,24)" fg:x="6011" fg:w="10"/><text x="97.7678%" y="1534.50"></text></g><g><title>_compile_core (numba/core/compiler.py:472) (10 samples, 0.16%)</title><rect x="97.5178%" y="1540" width="0.1622%" height="15" fill="rgb(224,66,35)" fg:x="6011" fg:w="10"/><text x="97.7678%" y="1550.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (10 samples, 0.16%)</title><rect x="97.5178%" y="1556" width="0.1622%" height="15" fill="rgb(221,13,50)" fg:x="6011" fg:w="10"/><text x="97.7678%" y="1566.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (10 samples, 0.16%)</title><rect x="97.5178%" y="1572" width="0.1622%" height="15" fill="rgb(236,68,49)" fg:x="6011" fg:w="10"/><text x="97.7678%" y="1582.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (8 samples, 0.13%)</title><rect x="97.5503%" y="1588" width="0.1298%" height="15" fill="rgb(229,146,28)" fg:x="6013" fg:w="8"/><text x="97.8003%" y="1598.50"></text></g><g><title>check (numba/core/compiler_machinery.py:273) (8 samples, 0.13%)</title><rect x="97.5503%" y="1604" width="0.1298%" height="15" fill="rgb(225,31,38)" fg:x="6013" fg:w="8"/><text x="97.8003%" y="1614.50"></text></g><g><title>lower_inst (numba/core/lowering.py:448) (11 samples, 0.18%)</title><rect x="97.5178%" y="1332" width="0.1785%" height="15" fill="rgb(250,208,3)" fg:x="6011" fg:w="11"/><text x="97.7678%" y="1342.50"></text></g><g><title>lower_assign (numba/core/lowering.py:660) (11 samples, 0.18%)</title><rect x="97.5178%" y="1348" width="0.1785%" height="15" fill="rgb(246,54,23)" fg:x="6011" fg:w="11"/><text x="97.7678%" y="1358.50"></text></g><g><title>run_pass (numba/core/typed_passes.py:468) (12 samples, 0.19%)</title><rect x="97.5178%" y="1252" width="0.1947%" height="15" fill="rgb(243,76,11)" fg:x="6011" fg:w="12"/><text x="97.7678%" y="1262.50"></text></g><g><title>lower (numba/core/lowering.py:187) (12 samples, 0.19%)</title><rect x="97.5178%" y="1268" width="0.1947%" height="15" fill="rgb(245,21,50)" fg:x="6011" fg:w="12"/><text x="97.7678%" y="1278.50"></text></g><g><title>lower_normal_function (numba/core/lowering.py:226) (12 samples, 0.19%)</title><rect x="97.5178%" y="1284" width="0.1947%" height="15" fill="rgb(228,9,43)" fg:x="6011" fg:w="12"/><text x="97.7678%" y="1294.50"></text></g><g><title>lower_function_body (numba/core/lowering.py:256) (12 samples, 0.19%)</title><rect x="97.5178%" y="1300" width="0.1947%" height="15" fill="rgb(208,100,47)" fg:x="6011" fg:w="12"/><text x="97.7678%" y="1310.50"></text></g><g><title>lower_block (numba/core/lowering.py:270) (12 samples, 0.19%)</title><rect x="97.5178%" y="1316" width="0.1947%" height="15" fill="rgb(232,26,8)" fg:x="6011" fg:w="12"/><text x="97.7678%" y="1326.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (18 samples, 0.29%)</title><rect x="97.4367%" y="1220" width="0.2920%" height="15" fill="rgb(216,166,38)" fg:x="6006" fg:w="18"/><text x="97.6867%" y="1230.50"></text></g><g><title>check (numba/core/compiler_machinery.py:273) (18 samples, 0.29%)</title><rect x="97.4367%" y="1236" width="0.2920%" height="15" fill="rgb(251,202,51)" fg:x="6006" fg:w="18"/><text x="97.6867%" y="1246.50"></text></g><g><title>_compile_for_argtys (numba/np/ufunc/dufunc.py:346) (40 samples, 0.65%)</title><rect x="97.0960%" y="1060" width="0.6489%" height="15" fill="rgb(254,216,34)" fg:x="5985" fg:w="40"/><text x="97.3460%" y="1070.50"></text></g><g><title>_compile_element_wise_function (numba/np/ufunc/ufuncbuilder.py:175) (40 samples, 0.65%)</title><rect x="97.0960%" y="1076" width="0.6489%" height="15" fill="rgb(251,32,27)" fg:x="5985" fg:w="40"/><text x="97.3460%" y="1086.50"></text></g><g><title>compile (numba/np/ufunc/ufuncbuilder.py:123) (40 samples, 0.65%)</title><rect x="97.0960%" y="1092" width="0.6489%" height="15" fill="rgb(208,127,28)" fg:x="5985" fg:w="40"/><text x="97.3460%" y="1102.50"></text></g><g><title>_compile_core (numba/np/ufunc/ufuncbuilder.py:156) (40 samples, 0.65%)</title><rect x="97.0960%" y="1108" width="0.6489%" height="15" fill="rgb(224,137,22)" fg:x="5985" fg:w="40"/><text x="97.3460%" y="1118.50"></text></g><g><title>compile_extra (numba/core/compiler.py:744) (20 samples, 0.32%)</title><rect x="97.4205%" y="1124" width="0.3245%" height="15" fill="rgb(254,70,32)" fg:x="6005" fg:w="20"/><text x="97.6705%" y="1134.50"></text></g><g><title>compile_extra (numba/core/compiler.py:438) (19 samples, 0.31%)</title><rect x="97.4367%" y="1140" width="0.3082%" height="15" fill="rgb(229,75,37)" fg:x="6006" fg:w="19"/><text x="97.6867%" y="1150.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:506) (19 samples, 0.31%)</title><rect x="97.4367%" y="1156" width="0.3082%" height="15" fill="rgb(252,64,23)" fg:x="6006" fg:w="19"/><text x="97.6867%" y="1166.50"></text></g><g><title>_compile_core (numba/core/compiler.py:472) (19 samples, 0.31%)</title><rect x="97.4367%" y="1172" width="0.3082%" height="15" fill="rgb(232,162,48)" fg:x="6006" fg:w="19"/><text x="97.6867%" y="1182.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (19 samples, 0.31%)</title><rect x="97.4367%" y="1188" width="0.3082%" height="15" fill="rgb(246,160,12)" fg:x="6006" fg:w="19"/><text x="97.6867%" y="1198.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (19 samples, 0.31%)</title><rect x="97.4367%" y="1204" width="0.3082%" height="15" fill="rgb(247,166,0)" fg:x="6006" fg:w="19"/><text x="97.6867%" y="1214.50"></text></g><g><title>&lt;module&gt; (arviz/plots/__init__.py:11) (42 samples, 0.68%)</title><rect x="97.0960%" y="804" width="0.6814%" height="15" fill="rgb(249,219,21)" fg:x="5985" fg:w="42"/><text x="97.3460%" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (42 samples, 0.68%)</title><rect x="97.0960%" y="820" width="0.6814%" height="15" fill="rgb(205,209,3)" fg:x="5985" fg:w="42"/><text x="97.3460%" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (42 samples, 0.68%)</title><rect x="97.0960%" y="836" width="0.6814%" height="15" fill="rgb(243,44,1)" fg:x="5985" fg:w="42"/><text x="97.3460%" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (42 samples, 0.68%)</title><rect x="97.0960%" y="852" width="0.6814%" height="15" fill="rgb(206,159,16)" fg:x="5985" fg:w="42"/><text x="97.3460%" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (42 samples, 0.68%)</title><rect x="97.0960%" y="868" width="0.6814%" height="15" fill="rgb(244,77,30)" fg:x="5985" fg:w="42"/><text x="97.3460%" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (42 samples, 0.68%)</title><rect x="97.0960%" y="884" width="0.6814%" height="15" fill="rgb(218,69,12)" fg:x="5985" fg:w="42"/><text x="97.3460%" y="894.50"></text></g><g><title>&lt;module&gt; (arviz/plots/ecdfplot.py:14) (42 samples, 0.68%)</title><rect x="97.0960%" y="900" width="0.6814%" height="15" fill="rgb(212,87,7)" fg:x="5985" fg:w="42"/><text x="97.3460%" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (42 samples, 0.68%)</title><rect x="97.0960%" y="916" width="0.6814%" height="15" fill="rgb(245,114,25)" fg:x="5985" fg:w="42"/><text x="97.3460%" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (42 samples, 0.68%)</title><rect x="97.0960%" y="932" width="0.6814%" height="15" fill="rgb(210,61,42)" fg:x="5985" fg:w="42"/><text x="97.3460%" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (42 samples, 0.68%)</title><rect x="97.0960%" y="948" width="0.6814%" height="15" fill="rgb(211,52,33)" fg:x="5985" fg:w="42"/><text x="97.3460%" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (42 samples, 0.68%)</title><rect x="97.0960%" y="964" width="0.6814%" height="15" fill="rgb(234,58,33)" fg:x="5985" fg:w="42"/><text x="97.3460%" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (42 samples, 0.68%)</title><rect x="97.0960%" y="980" width="0.6814%" height="15" fill="rgb(220,115,36)" fg:x="5985" fg:w="42"/><text x="97.3460%" y="990.50"></text></g><g><title>&lt;module&gt; (arviz/stats/ecdf_utils.py:190) (42 samples, 0.68%)</title><rect x="97.0960%" y="996" width="0.6814%" height="15" fill="rgb(243,153,54)" fg:x="5985" fg:w="42"/><text x="97.3460%" y="1006.50"></text></g><g><title>wrap (numba/np/ufunc/decorators.py:131) (42 samples, 0.68%)</title><rect x="97.0960%" y="1012" width="0.6814%" height="15" fill="rgb(251,47,18)" fg:x="5985" fg:w="42"/><text x="97.3460%" y="1022.50"></text></g><g><title>add (numba/np/ufunc/dufunc.py:272) (42 samples, 0.68%)</title><rect x="97.0960%" y="1028" width="0.6814%" height="15" fill="rgb(242,102,42)" fg:x="5985" fg:w="42"/><text x="97.3460%" y="1038.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (42 samples, 0.68%)</title><rect x="97.0960%" y="1044" width="0.6814%" height="15" fill="rgb(234,31,38)" fg:x="5985" fg:w="42"/><text x="97.3460%" y="1054.50"></text></g><g><title>&lt;module&gt; (numba/__init__.py:73) (8 samples, 0.13%)</title><rect x="97.8423%" y="1492" width="0.1298%" height="15" fill="rgb(221,117,51)" fg:x="6031" fg:w="8"/><text x="98.0923%" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (8 samples, 0.13%)</title><rect x="97.8423%" y="1508" width="0.1298%" height="15" fill="rgb(212,20,18)" fg:x="6031" fg:w="8"/><text x="98.0923%" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (8 samples, 0.13%)</title><rect x="97.8423%" y="1524" width="0.1298%" height="15" fill="rgb(245,133,36)" fg:x="6031" fg:w="8"/><text x="98.0923%" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (8 samples, 0.13%)</title><rect x="97.8423%" y="1540" width="0.1298%" height="15" fill="rgb(212,6,19)" fg:x="6031" fg:w="8"/><text x="98.0923%" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (8 samples, 0.13%)</title><rect x="97.8423%" y="1556" width="0.1298%" height="15" fill="rgb(218,1,36)" fg:x="6031" fg:w="8"/><text x="98.0923%" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (8 samples, 0.13%)</title><rect x="97.8423%" y="1572" width="0.1298%" height="15" fill="rgb(246,84,54)" fg:x="6031" fg:w="8"/><text x="98.0923%" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (8 samples, 0.13%)</title><rect x="97.8423%" y="1588" width="0.1298%" height="15" fill="rgb(242,110,6)" fg:x="6031" fg:w="8"/><text x="98.0923%" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (8 samples, 0.13%)</title><rect x="97.8423%" y="1604" width="0.1298%" height="15" fill="rgb(214,47,5)" fg:x="6031" fg:w="8"/><text x="98.0923%" y="1614.50"></text></g><g><title>&lt;module&gt; (numba/core/config.py:17) (8 samples, 0.13%)</title><rect x="97.8423%" y="1620" width="0.1298%" height="15" fill="rgb(218,159,25)" fg:x="6031" fg:w="8"/><text x="98.0923%" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (8 samples, 0.13%)</title><rect x="97.8423%" y="1636" width="0.1298%" height="15" fill="rgb(215,211,28)" fg:x="6031" fg:w="8"/><text x="98.0923%" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (8 samples, 0.13%)</title><rect x="97.8423%" y="1652" width="0.1298%" height="15" fill="rgb(238,59,32)" fg:x="6031" fg:w="8"/><text x="98.0923%" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (8 samples, 0.13%)</title><rect x="97.8423%" y="1668" width="0.1298%" height="15" fill="rgb(226,82,3)" fg:x="6031" fg:w="8"/><text x="98.0923%" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (8 samples, 0.13%)</title><rect x="97.8423%" y="1684" width="0.1298%" height="15" fill="rgb(240,164,32)" fg:x="6031" fg:w="8"/><text x="98.0923%" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (8 samples, 0.13%)</title><rect x="97.8423%" y="1700" width="0.1298%" height="15" fill="rgb(232,46,7)" fg:x="6031" fg:w="8"/><text x="98.0923%" y="1710.50"></text></g><g><title>wrapper (arviz/utils.py:311) (25 samples, 0.41%)</title><rect x="97.8261%" y="1364" width="0.4056%" height="15" fill="rgb(229,129,53)" fg:x="6030" fg:w="25"/><text x="98.0761%" y="1374.50"></text></g><g><title>import_module (importlib/__init__.py:90) (25 samples, 0.41%)</title><rect x="97.8261%" y="1380" width="0.4056%" height="15" fill="rgb(234,188,29)" fg:x="6030" fg:w="25"/><text x="98.0761%" y="1390.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1387) (25 samples, 0.41%)</title><rect x="97.8261%" y="1396" width="0.4056%" height="15" fill="rgb(246,141,4)" fg:x="6030" fg:w="25"/><text x="98.0761%" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (25 samples, 0.41%)</title><rect x="97.8261%" y="1412" width="0.4056%" height="15" fill="rgb(229,23,39)" fg:x="6030" fg:w="25"/><text x="98.0761%" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (25 samples, 0.41%)</title><rect x="97.8261%" y="1428" width="0.4056%" height="15" fill="rgb(206,12,3)" fg:x="6030" fg:w="25"/><text x="98.0761%" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (25 samples, 0.41%)</title><rect x="97.8261%" y="1444" width="0.4056%" height="15" fill="rgb(252,226,20)" fg:x="6030" fg:w="25"/><text x="98.0761%" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (25 samples, 0.41%)</title><rect x="97.8261%" y="1460" width="0.4056%" height="15" fill="rgb(216,123,35)" fg:x="6030" fg:w="25"/><text x="98.0761%" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (25 samples, 0.41%)</title><rect x="97.8261%" y="1476" width="0.4056%" height="15" fill="rgb(212,68,40)" fg:x="6030" fg:w="25"/><text x="98.0761%" y="1486.50"></text></g><g><title>&lt;module&gt; (numba/__init__.py:92) (12 samples, 0.19%)</title><rect x="98.0370%" y="1492" width="0.1947%" height="15" fill="rgb(254,125,32)" fg:x="6043" fg:w="12"/><text x="98.2870%" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (12 samples, 0.19%)</title><rect x="98.0370%" y="1508" width="0.1947%" height="15" fill="rgb(253,97,22)" fg:x="6043" fg:w="12"/><text x="98.2870%" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (12 samples, 0.19%)</title><rect x="98.0370%" y="1524" width="0.1947%" height="15" fill="rgb(241,101,14)" fg:x="6043" fg:w="12"/><text x="98.2870%" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (12 samples, 0.19%)</title><rect x="98.0370%" y="1540" width="0.1947%" height="15" fill="rgb(238,103,29)" fg:x="6043" fg:w="12"/><text x="98.2870%" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (12 samples, 0.19%)</title><rect x="98.0370%" y="1556" width="0.1947%" height="15" fill="rgb(233,195,47)" fg:x="6043" fg:w="12"/><text x="98.2870%" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (12 samples, 0.19%)</title><rect x="98.0370%" y="1572" width="0.1947%" height="15" fill="rgb(246,218,30)" fg:x="6043" fg:w="12"/><text x="98.2870%" y="1582.50"></text></g><g><title>&lt;module&gt; (numba/core/decorators.py:12) (12 samples, 0.19%)</title><rect x="98.0370%" y="1588" width="0.1947%" height="15" fill="rgb(219,145,47)" fg:x="6043" fg:w="12"/><text x="98.2870%" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (12 samples, 0.19%)</title><rect x="98.0370%" y="1604" width="0.1947%" height="15" fill="rgb(243,12,26)" fg:x="6043" fg:w="12"/><text x="98.2870%" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (12 samples, 0.19%)</title><rect x="98.0370%" y="1620" width="0.1947%" height="15" fill="rgb(214,87,16)" fg:x="6043" fg:w="12"/><text x="98.2870%" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (12 samples, 0.19%)</title><rect x="98.0370%" y="1636" width="0.1947%" height="15" fill="rgb(208,99,42)" fg:x="6043" fg:w="12"/><text x="98.2870%" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (12 samples, 0.19%)</title><rect x="98.0370%" y="1652" width="0.1947%" height="15" fill="rgb(253,99,2)" fg:x="6043" fg:w="12"/><text x="98.2870%" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (12 samples, 0.19%)</title><rect x="98.0370%" y="1668" width="0.1947%" height="15" fill="rgb(220,168,23)" fg:x="6043" fg:w="12"/><text x="98.2870%" y="1678.50"></text></g><g><title>&lt;module&gt; (numba/stencils/stencil.py:11) (12 samples, 0.19%)</title><rect x="98.0370%" y="1684" width="0.1947%" height="15" fill="rgb(242,38,24)" fg:x="6043" fg:w="12"/><text x="98.2870%" y="1694.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (12 samples, 0.19%)</title><rect x="98.0370%" y="1700" width="0.1947%" height="15" fill="rgb(225,182,9)" fg:x="6043" fg:w="12"/><text x="98.2870%" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (12 samples, 0.19%)</title><rect x="98.0370%" y="1716" width="0.1947%" height="15" fill="rgb(243,178,37)" fg:x="6043" fg:w="12"/><text x="98.2870%" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (12 samples, 0.19%)</title><rect x="98.0370%" y="1732" width="0.1947%" height="15" fill="rgb(232,139,19)" fg:x="6043" fg:w="12"/><text x="98.2870%" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (12 samples, 0.19%)</title><rect x="98.0370%" y="1748" width="0.1947%" height="15" fill="rgb(225,201,24)" fg:x="6043" fg:w="12"/><text x="98.2870%" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (12 samples, 0.19%)</title><rect x="98.0370%" y="1764" width="0.1947%" height="15" fill="rgb(221,47,46)" fg:x="6043" fg:w="12"/><text x="98.2870%" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (12 samples, 0.19%)</title><rect x="98.0370%" y="1780" width="0.1947%" height="15" fill="rgb(249,23,13)" fg:x="6043" fg:w="12"/><text x="98.2870%" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (12 samples, 0.19%)</title><rect x="98.0370%" y="1796" width="0.1947%" height="15" fill="rgb(219,9,5)" fg:x="6043" fg:w="12"/><text x="98.2870%" y="1806.50"></text></g><g><title>&lt;module&gt; (numba/core/registry.py:6) (11 samples, 0.18%)</title><rect x="98.0532%" y="1812" width="0.1785%" height="15" fill="rgb(254,171,16)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="1822.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (11 samples, 0.18%)</title><rect x="98.0532%" y="1828" width="0.1785%" height="15" fill="rgb(230,171,20)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (11 samples, 0.18%)</title><rect x="98.0532%" y="1844" width="0.1785%" height="15" fill="rgb(210,71,41)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="1854.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (11 samples, 0.18%)</title><rect x="98.0532%" y="1860" width="0.1785%" height="15" fill="rgb(206,173,20)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="1870.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (11 samples, 0.18%)</title><rect x="98.0532%" y="1876" width="0.1785%" height="15" fill="rgb(233,88,34)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="1886.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (11 samples, 0.18%)</title><rect x="98.0532%" y="1892" width="0.1785%" height="15" fill="rgb(223,209,46)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="1902.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (11 samples, 0.18%)</title><rect x="98.0532%" y="1908" width="0.1785%" height="15" fill="rgb(250,43,18)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="1918.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (11 samples, 0.18%)</title><rect x="98.0532%" y="1924" width="0.1785%" height="15" fill="rgb(208,13,10)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="1934.50"></text></g><g><title>&lt;module&gt; (numba/core/dispatcher.py:14) (11 samples, 0.18%)</title><rect x="98.0532%" y="1940" width="0.1785%" height="15" fill="rgb(212,200,36)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="1950.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (11 samples, 0.18%)</title><rect x="98.0532%" y="1956" width="0.1785%" height="15" fill="rgb(225,90,30)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="1966.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (11 samples, 0.18%)</title><rect x="98.0532%" y="1972" width="0.1785%" height="15" fill="rgb(236,182,39)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="1982.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (11 samples, 0.18%)</title><rect x="98.0532%" y="1988" width="0.1785%" height="15" fill="rgb(212,144,35)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="1998.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (11 samples, 0.18%)</title><rect x="98.0532%" y="2004" width="0.1785%" height="15" fill="rgb(228,63,44)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="2014.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (11 samples, 0.18%)</title><rect x="98.0532%" y="2020" width="0.1785%" height="15" fill="rgb(228,109,6)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="2030.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (11 samples, 0.18%)</title><rect x="98.0532%" y="2036" width="0.1785%" height="15" fill="rgb(238,117,24)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="2046.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (11 samples, 0.18%)</title><rect x="98.0532%" y="2052" width="0.1785%" height="15" fill="rgb(242,26,26)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="2062.50"></text></g><g><title>&lt;module&gt; (numba/core/compiler.py:6) (11 samples, 0.18%)</title><rect x="98.0532%" y="2068" width="0.1785%" height="15" fill="rgb(221,92,48)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="2078.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (11 samples, 0.18%)</title><rect x="98.0532%" y="2084" width="0.1785%" height="15" fill="rgb(209,209,32)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="2094.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (11 samples, 0.18%)</title><rect x="98.0532%" y="2100" width="0.1785%" height="15" fill="rgb(221,70,22)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="2110.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (11 samples, 0.18%)</title><rect x="98.0532%" y="2116" width="0.1785%" height="15" fill="rgb(248,145,5)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="2126.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (11 samples, 0.18%)</title><rect x="98.0532%" y="2132" width="0.1785%" height="15" fill="rgb(226,116,26)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="2142.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (11 samples, 0.18%)</title><rect x="98.0532%" y="2148" width="0.1785%" height="15" fill="rgb(244,5,17)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="2158.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (11 samples, 0.18%)</title><rect x="98.0532%" y="2164" width="0.1785%" height="15" fill="rgb(252,159,33)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="2174.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (11 samples, 0.18%)</title><rect x="98.0532%" y="2180" width="0.1785%" height="15" fill="rgb(206,71,0)" fg:x="6044" fg:w="11"/><text x="98.3032%" y="2190.50"></text></g><g><title>&lt;module&gt; (arviz/__init__.py:34) (72 samples, 1.17%)</title><rect x="97.0960%" y="708" width="1.1681%" height="15" fill="rgb(233,118,54)" fg:x="5985" fg:w="72"/><text x="97.3460%" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (72 samples, 1.17%)</title><rect x="97.0960%" y="724" width="1.1681%" height="15" fill="rgb(234,83,48)" fg:x="5985" fg:w="72"/><text x="97.3460%" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (72 samples, 1.17%)</title><rect x="97.0960%" y="740" width="1.1681%" height="15" fill="rgb(228,3,54)" fg:x="5985" fg:w="72"/><text x="97.3460%" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (72 samples, 1.17%)</title><rect x="97.0960%" y="756" width="1.1681%" height="15" fill="rgb(226,155,13)" fg:x="5985" fg:w="72"/><text x="97.3460%" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (72 samples, 1.17%)</title><rect x="97.0960%" y="772" width="1.1681%" height="15" fill="rgb(241,28,37)" fg:x="5985" fg:w="72"/><text x="97.3460%" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (72 samples, 1.17%)</title><rect x="97.0960%" y="788" width="1.1681%" height="15" fill="rgb(233,93,10)" fg:x="5985" fg:w="72"/><text x="97.3460%" y="798.50"></text></g><g><title>&lt;module&gt; (arviz/plots/__init__.py:3) (29 samples, 0.47%)</title><rect x="97.7936%" y="804" width="0.4705%" height="15" fill="rgb(225,113,19)" fg:x="6028" fg:w="29"/><text x="98.0436%" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (29 samples, 0.47%)</title><rect x="97.7936%" y="820" width="0.4705%" height="15" fill="rgb(241,2,18)" fg:x="6028" fg:w="29"/><text x="98.0436%" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (29 samples, 0.47%)</title><rect x="97.7936%" y="836" width="0.4705%" height="15" fill="rgb(228,207,21)" fg:x="6028" fg:w="29"/><text x="98.0436%" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (29 samples, 0.47%)</title><rect x="97.7936%" y="852" width="0.4705%" height="15" fill="rgb(213,211,35)" fg:x="6028" fg:w="29"/><text x="98.0436%" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (29 samples, 0.47%)</title><rect x="97.7936%" y="868" width="0.4705%" height="15" fill="rgb(209,83,10)" fg:x="6028" fg:w="29"/><text x="98.0436%" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (29 samples, 0.47%)</title><rect x="97.7936%" y="884" width="0.4705%" height="15" fill="rgb(209,164,1)" fg:x="6028" fg:w="29"/><text x="98.0436%" y="894.50"></text></g><g><title>&lt;module&gt; (arviz/plots/autocorrplot.py:8) (29 samples, 0.47%)</title><rect x="97.7936%" y="900" width="0.4705%" height="15" fill="rgb(213,184,43)" fg:x="6028" fg:w="29"/><text x="98.0436%" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (29 samples, 0.47%)</title><rect x="97.7936%" y="916" width="0.4705%" height="15" fill="rgb(231,61,34)" fg:x="6028" fg:w="29"/><text x="98.0436%" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (29 samples, 0.47%)</title><rect x="97.7936%" y="932" width="0.4705%" height="15" fill="rgb(235,75,3)" fg:x="6028" fg:w="29"/><text x="98.0436%" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (29 samples, 0.47%)</title><rect x="97.7936%" y="948" width="0.4705%" height="15" fill="rgb(220,106,47)" fg:x="6028" fg:w="29"/><text x="98.0436%" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (29 samples, 0.47%)</title><rect x="97.7936%" y="964" width="0.4705%" height="15" fill="rgb(210,196,33)" fg:x="6028" fg:w="29"/><text x="98.0436%" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (29 samples, 0.47%)</title><rect x="97.7936%" y="980" width="0.4705%" height="15" fill="rgb(229,154,42)" fg:x="6028" fg:w="29"/><text x="98.0436%" y="990.50"></text></g><g><title>&lt;module&gt; (arviz/plots/plot_utils.py:16) (29 samples, 0.47%)</title><rect x="97.7936%" y="996" width="0.4705%" height="15" fill="rgb(228,114,26)" fg:x="6028" fg:w="29"/><text x="98.0436%" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (29 samples, 0.47%)</title><rect x="97.7936%" y="1012" width="0.4705%" height="15" fill="rgb(208,144,1)" fg:x="6028" fg:w="29"/><text x="98.0436%" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (29 samples, 0.47%)</title><rect x="97.7936%" y="1028" width="0.4705%" height="15" fill="rgb(239,112,37)" fg:x="6028" fg:w="29"/><text x="98.0436%" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (29 samples, 0.47%)</title><rect x="97.7936%" y="1044" width="0.4705%" height="15" fill="rgb(210,96,50)" fg:x="6028" fg:w="29"/><text x="98.0436%" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (29 samples, 0.47%)</title><rect x="97.7936%" y="1060" width="0.4705%" height="15" fill="rgb(222,178,2)" fg:x="6028" fg:w="29"/><text x="98.0436%" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (29 samples, 0.47%)</title><rect x="97.7936%" y="1076" width="0.4705%" height="15" fill="rgb(226,74,18)" fg:x="6028" fg:w="29"/><text x="98.0436%" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (29 samples, 0.47%)</title><rect x="97.7936%" y="1092" width="0.4705%" height="15" fill="rgb(225,67,54)" fg:x="6028" fg:w="29"/><text x="98.0436%" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (28 samples, 0.45%)</title><rect x="97.8099%" y="1108" width="0.4543%" height="15" fill="rgb(251,92,32)" fg:x="6029" fg:w="28"/><text x="98.0599%" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (28 samples, 0.45%)</title><rect x="97.8099%" y="1124" width="0.4543%" height="15" fill="rgb(228,149,22)" fg:x="6029" fg:w="28"/><text x="98.0599%" y="1134.50"></text></g><g><title>&lt;module&gt; (arviz/stats/__init__.py:4) (27 samples, 0.44%)</title><rect x="97.8261%" y="1140" width="0.4380%" height="15" fill="rgb(243,54,13)" fg:x="6030" fg:w="27"/><text x="98.0761%" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (27 samples, 0.44%)</title><rect x="97.8261%" y="1156" width="0.4380%" height="15" fill="rgb(243,180,28)" fg:x="6030" fg:w="27"/><text x="98.0761%" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (27 samples, 0.44%)</title><rect x="97.8261%" y="1172" width="0.4380%" height="15" fill="rgb(208,167,24)" fg:x="6030" fg:w="27"/><text x="98.0761%" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (27 samples, 0.44%)</title><rect x="97.8261%" y="1188" width="0.4380%" height="15" fill="rgb(245,73,45)" fg:x="6030" fg:w="27"/><text x="98.0761%" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (27 samples, 0.44%)</title><rect x="97.8261%" y="1204" width="0.4380%" height="15" fill="rgb(237,203,48)" fg:x="6030" fg:w="27"/><text x="98.0761%" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (27 samples, 0.44%)</title><rect x="97.8261%" y="1220" width="0.4380%" height="15" fill="rgb(211,197,16)" fg:x="6030" fg:w="27"/><text x="98.0761%" y="1230.50"></text></g><g><title>&lt;module&gt; (arviz/stats/diagnostics.py:15) (27 samples, 0.44%)</title><rect x="97.8261%" y="1236" width="0.4380%" height="15" fill="rgb(243,99,51)" fg:x="6030" fg:w="27"/><text x="98.0761%" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (27 samples, 0.44%)</title><rect x="97.8261%" y="1252" width="0.4380%" height="15" fill="rgb(215,123,29)" fg:x="6030" fg:w="27"/><text x="98.0761%" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (27 samples, 0.44%)</title><rect x="97.8261%" y="1268" width="0.4380%" height="15" fill="rgb(239,186,37)" fg:x="6030" fg:w="27"/><text x="98.0761%" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (27 samples, 0.44%)</title><rect x="97.8261%" y="1284" width="0.4380%" height="15" fill="rgb(252,136,39)" fg:x="6030" fg:w="27"/><text x="98.0761%" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (27 samples, 0.44%)</title><rect x="97.8261%" y="1300" width="0.4380%" height="15" fill="rgb(223,213,32)" fg:x="6030" fg:w="27"/><text x="98.0761%" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (27 samples, 0.44%)</title><rect x="97.8261%" y="1316" width="0.4380%" height="15" fill="rgb(233,115,5)" fg:x="6030" fg:w="27"/><text x="98.0761%" y="1326.50"></text></g><g><title>&lt;module&gt; (arviz/stats/stats_utils.py:544) (27 samples, 0.44%)</title><rect x="97.8261%" y="1332" width="0.4380%" height="15" fill="rgb(207,226,44)" fg:x="6030" fg:w="27"/><text x="98.0761%" y="1342.50"></text></g><g><title>conditional_vect (arviz/utils.py:318) (27 samples, 0.44%)</title><rect x="97.8261%" y="1348" width="0.4380%" height="15" fill="rgb(208,126,0)" fg:x="6030" fg:w="27"/><text x="98.0761%" y="1358.50"></text></g><g><title>&lt;module&gt; (arviz/__init__.py:8) (7 samples, 0.11%)</title><rect x="98.2641%" y="708" width="0.1136%" height="15" fill="rgb(244,66,21)" fg:x="6057" fg:w="7"/><text x="98.5141%" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (7 samples, 0.11%)</title><rect x="98.2641%" y="724" width="0.1136%" height="15" fill="rgb(222,97,12)" fg:x="6057" fg:w="7"/><text x="98.5141%" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (7 samples, 0.11%)</title><rect x="98.2641%" y="740" width="0.1136%" height="15" fill="rgb(219,213,19)" fg:x="6057" fg:w="7"/><text x="98.5141%" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.11%)</title><rect x="98.2641%" y="756" width="0.1136%" height="15" fill="rgb(252,169,30)" fg:x="6057" fg:w="7"/><text x="98.5141%" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (7 samples, 0.11%)</title><rect x="98.2641%" y="772" width="0.1136%" height="15" fill="rgb(206,32,51)" fg:x="6057" fg:w="7"/><text x="98.5141%" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (7 samples, 0.11%)</title><rect x="98.2641%" y="788" width="0.1136%" height="15" fill="rgb(250,172,42)" fg:x="6057" fg:w="7"/><text x="98.5141%" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (7 samples, 0.11%)</title><rect x="98.2641%" y="804" width="0.1136%" height="15" fill="rgb(209,34,43)" fg:x="6057" fg:w="7"/><text x="98.5141%" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (7 samples, 0.11%)</title><rect x="98.2641%" y="820" width="0.1136%" height="15" fill="rgb(223,11,35)" fg:x="6057" fg:w="7"/><text x="98.5141%" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.11%)</title><rect x="98.2641%" y="836" width="0.1136%" height="15" fill="rgb(251,219,26)" fg:x="6057" fg:w="7"/><text x="98.5141%" y="846.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:161) (7 samples, 0.11%)</title><rect x="98.2641%" y="852" width="0.1136%" height="15" fill="rgb(231,119,3)" fg:x="6057" fg:w="7"/><text x="98.5141%" y="862.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (7 samples, 0.11%)</title><rect x="98.2641%" y="868" width="0.1136%" height="15" fill="rgb(216,97,11)" fg:x="6057" fg:w="7"/><text x="98.5141%" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.11%)</title><rect x="98.2641%" y="884" width="0.1136%" height="15" fill="rgb(223,59,9)" fg:x="6057" fg:w="7"/><text x="98.5141%" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (7 samples, 0.11%)</title><rect x="98.2641%" y="900" width="0.1136%" height="15" fill="rgb(233,93,31)" fg:x="6057" fg:w="7"/><text x="98.5141%" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (7 samples, 0.11%)</title><rect x="98.2641%" y="916" width="0.1136%" height="15" fill="rgb(239,81,33)" fg:x="6057" fg:w="7"/><text x="98.5141%" y="926.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (7 samples, 0.11%)</title><rect x="98.2641%" y="932" width="0.1136%" height="15" fill="rgb(213,120,34)" fg:x="6057" fg:w="7"/><text x="98.5141%" y="942.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (7 samples, 0.11%)</title><rect x="98.2641%" y="948" width="0.1136%" height="15" fill="rgb(243,49,53)" fg:x="6057" fg:w="7"/><text x="98.5141%" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.11%)</title><rect x="98.2641%" y="964" width="0.1136%" height="15" fill="rgb(247,216,33)" fg:x="6057" fg:w="7"/><text x="98.5141%" y="974.50"></text></g><g><title>&lt;module&gt; (matplotlib/projections/__init__.py:55) (8 samples, 0.13%)</title><rect x="98.5237%" y="1028" width="0.1298%" height="15" fill="rgb(226,26,14)" fg:x="6073" fg:w="8"/><text x="98.7737%" y="1038.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (8 samples, 0.13%)</title><rect x="98.5237%" y="1044" width="0.1298%" height="15" fill="rgb(215,49,53)" fg:x="6073" fg:w="8"/><text x="98.7737%" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (8 samples, 0.13%)</title><rect x="98.5237%" y="1060" width="0.1298%" height="15" fill="rgb(245,162,40)" fg:x="6073" fg:w="8"/><text x="98.7737%" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (8 samples, 0.13%)</title><rect x="98.5237%" y="1076" width="0.1298%" height="15" fill="rgb(229,68,17)" fg:x="6073" fg:w="8"/><text x="98.7737%" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (8 samples, 0.13%)</title><rect x="98.5237%" y="1092" width="0.1298%" height="15" fill="rgb(213,182,10)" fg:x="6073" fg:w="8"/><text x="98.7737%" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (8 samples, 0.13%)</title><rect x="98.5237%" y="1108" width="0.1298%" height="15" fill="rgb(245,125,30)" fg:x="6073" fg:w="8"/><text x="98.7737%" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (8 samples, 0.13%)</title><rect x="98.5237%" y="1124" width="0.1298%" height="15" fill="rgb(232,202,2)" fg:x="6073" fg:w="8"/><text x="98.7737%" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (8 samples, 0.13%)</title><rect x="98.5237%" y="1140" width="0.1298%" height="15" fill="rgb(237,140,51)" fg:x="6073" fg:w="8"/><text x="98.7737%" y="1150.50"></text></g><g><title>&lt;module&gt; (pymc/util.py:22) (107 samples, 1.74%)</title><rect x="96.9987%" y="612" width="1.7359%" height="15" fill="rgb(236,157,25)" fg:x="5979" fg:w="107"/><text x="97.2487%" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (107 samples, 1.74%)</title><rect x="96.9987%" y="628" width="1.7359%" height="15" fill="rgb(219,209,0)" fg:x="5979" fg:w="107"/><text x="97.2487%" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (107 samples, 1.74%)</title><rect x="96.9987%" y="644" width="1.7359%" height="15" fill="rgb(240,116,54)" fg:x="5979" fg:w="107"/><text x="97.2487%" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (107 samples, 1.74%)</title><rect x="96.9987%" y="660" width="1.7359%" height="15" fill="rgb(216,10,36)" fg:x="5979" fg:w="107"/><text x="97.2487%" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (107 samples, 1.74%)</title><rect x="96.9987%" y="676" width="1.7359%" height="15" fill="rgb(222,72,44)" fg:x="5979" fg:w="107"/><text x="97.2487%" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (107 samples, 1.74%)</title><rect x="96.9987%" y="692" width="1.7359%" height="15" fill="rgb(232,159,9)" fg:x="5979" fg:w="107"/><text x="97.2487%" y="702.50"></text></g><g><title>&lt;module&gt; (arviz/__init__.py:9) (22 samples, 0.36%)</title><rect x="98.3777%" y="708" width="0.3569%" height="15" fill="rgb(210,39,32)" fg:x="6064" fg:w="22"/><text x="98.6277%" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (22 samples, 0.36%)</title><rect x="98.3777%" y="724" width="0.3569%" height="15" fill="rgb(216,194,45)" fg:x="6064" fg:w="22"/><text x="98.6277%" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (22 samples, 0.36%)</title><rect x="98.3777%" y="740" width="0.3569%" height="15" fill="rgb(218,18,35)" fg:x="6064" fg:w="22"/><text x="98.6277%" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (22 samples, 0.36%)</title><rect x="98.3777%" y="756" width="0.3569%" height="15" fill="rgb(207,83,51)" fg:x="6064" fg:w="22"/><text x="98.6277%" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (21 samples, 0.34%)</title><rect x="98.3939%" y="772" width="0.3407%" height="15" fill="rgb(225,63,43)" fg:x="6065" fg:w="21"/><text x="98.6439%" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (21 samples, 0.34%)</title><rect x="98.3939%" y="788" width="0.3407%" height="15" fill="rgb(207,57,36)" fg:x="6065" fg:w="21"/><text x="98.6439%" y="798.50"></text></g><g><title>&lt;module&gt; (matplotlib/pyplot.py:70) (14 samples, 0.23%)</title><rect x="98.5075%" y="804" width="0.2271%" height="15" fill="rgb(216,99,33)" fg:x="6072" fg:w="14"/><text x="98.7575%" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (13 samples, 0.21%)</title><rect x="98.5237%" y="820" width="0.2109%" height="15" fill="rgb(225,42,16)" fg:x="6073" fg:w="13"/><text x="98.7737%" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (13 samples, 0.21%)</title><rect x="98.5237%" y="836" width="0.2109%" height="15" fill="rgb(220,201,45)" fg:x="6073" fg:w="13"/><text x="98.7737%" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (13 samples, 0.21%)</title><rect x="98.5237%" y="852" width="0.2109%" height="15" fill="rgb(225,33,4)" fg:x="6073" fg:w="13"/><text x="98.7737%" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (13 samples, 0.21%)</title><rect x="98.5237%" y="868" width="0.2109%" height="15" fill="rgb(224,33,50)" fg:x="6073" fg:w="13"/><text x="98.7737%" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (13 samples, 0.21%)</title><rect x="98.5237%" y="884" width="0.2109%" height="15" fill="rgb(246,198,51)" fg:x="6073" fg:w="13"/><text x="98.7737%" y="894.50"></text></g><g><title>&lt;module&gt; (matplotlib/figure.py:40) (13 samples, 0.21%)</title><rect x="98.5237%" y="900" width="0.2109%" height="15" fill="rgb(205,22,4)" fg:x="6073" fg:w="13"/><text x="98.7737%" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (13 samples, 0.21%)</title><rect x="98.5237%" y="916" width="0.2109%" height="15" fill="rgb(206,3,8)" fg:x="6073" fg:w="13"/><text x="98.7737%" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (13 samples, 0.21%)</title><rect x="98.5237%" y="932" width="0.2109%" height="15" fill="rgb(251,23,15)" fg:x="6073" fg:w="13"/><text x="98.7737%" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (13 samples, 0.21%)</title><rect x="98.5237%" y="948" width="0.2109%" height="15" fill="rgb(252,88,28)" fg:x="6073" fg:w="13"/><text x="98.7737%" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (13 samples, 0.21%)</title><rect x="98.5237%" y="964" width="0.2109%" height="15" fill="rgb(212,127,14)" fg:x="6073" fg:w="13"/><text x="98.7737%" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (13 samples, 0.21%)</title><rect x="98.5237%" y="980" width="0.2109%" height="15" fill="rgb(247,145,37)" fg:x="6073" fg:w="13"/><text x="98.7737%" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (13 samples, 0.21%)</title><rect x="98.5237%" y="996" width="0.2109%" height="15" fill="rgb(209,117,53)" fg:x="6073" fg:w="13"/><text x="98.7737%" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (13 samples, 0.21%)</title><rect x="98.5237%" y="1012" width="0.2109%" height="15" fill="rgb(212,90,42)" fg:x="6073" fg:w="13"/><text x="98.7737%" y="1022.50"></text></g><g><title>&lt;module&gt; (pymc/gp/cov.py:52) (111 samples, 1.80%)</title><rect x="96.9825%" y="420" width="1.8008%" height="15" fill="rgb(218,164,37)" fg:x="5978" fg:w="111"/><text x="97.2325%" y="430.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (111 samples, 1.80%)</title><rect x="96.9825%" y="436" width="1.8008%" height="15" fill="rgb(246,65,34)" fg:x="5978" fg:w="111"/><text x="97.2325%" y="446.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (111 samples, 1.80%)</title><rect x="96.9825%" y="452" width="1.8008%" height="15" fill="rgb(231,100,33)" fg:x="5978" fg:w="111"/><text x="97.2325%" y="462.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (111 samples, 1.80%)</title><rect x="96.9825%" y="468" width="1.8008%" height="15" fill="rgb(228,126,14)" fg:x="5978" fg:w="111"/><text x="97.2325%" y="478.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (111 samples, 1.80%)</title><rect x="96.9825%" y="484" width="1.8008%" height="15" fill="rgb(215,173,21)" fg:x="5978" fg:w="111"/><text x="97.2325%" y="494.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (111 samples, 1.80%)</title><rect x="96.9825%" y="500" width="1.8008%" height="15" fill="rgb(210,6,40)" fg:x="5978" fg:w="111"/><text x="97.2325%" y="510.50">_..</text></g><g><title>&lt;module&gt; (pymc/pytensorf.py:55) (111 samples, 1.80%)</title><rect x="96.9825%" y="516" width="1.8008%" height="15" fill="rgb(212,48,18)" fg:x="5978" fg:w="111"/><text x="97.2325%" y="526.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (111 samples, 1.80%)</title><rect x="96.9825%" y="532" width="1.8008%" height="15" fill="rgb(230,214,11)" fg:x="5978" fg:w="111"/><text x="97.2325%" y="542.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (110 samples, 1.78%)</title><rect x="96.9987%" y="548" width="1.7846%" height="15" fill="rgb(254,105,39)" fg:x="5979" fg:w="110"/><text x="97.2487%" y="558.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (110 samples, 1.78%)</title><rect x="96.9987%" y="564" width="1.7846%" height="15" fill="rgb(245,158,5)" fg:x="5979" fg:w="110"/><text x="97.2487%" y="574.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (110 samples, 1.78%)</title><rect x="96.9987%" y="580" width="1.7846%" height="15" fill="rgb(249,208,11)" fg:x="5979" fg:w="110"/><text x="97.2487%" y="590.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (110 samples, 1.78%)</title><rect x="96.9987%" y="596" width="1.7846%" height="15" fill="rgb(210,39,28)" fg:x="5979" fg:w="110"/><text x="97.2487%" y="606.50">_..</text></g><g><title>&lt;module&gt; (pymc/__init__.py:50) (112 samples, 1.82%)</title><rect x="96.9825%" y="164" width="1.8170%" height="15" fill="rgb(211,56,53)" fg:x="5978" fg:w="112"/><text x="97.2325%" y="174.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (112 samples, 1.82%)</title><rect x="96.9825%" y="180" width="1.8170%" height="15" fill="rgb(226,201,30)" fg:x="5978" fg:w="112"/><text x="97.2325%" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (112 samples, 1.82%)</title><rect x="96.9825%" y="196" width="1.8170%" height="15" fill="rgb(239,101,34)" fg:x="5978" fg:w="112"/><text x="97.2325%" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (112 samples, 1.82%)</title><rect x="96.9825%" y="212" width="1.8170%" height="15" fill="rgb(226,209,5)" fg:x="5978" fg:w="112"/><text x="97.2325%" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (112 samples, 1.82%)</title><rect x="96.9825%" y="228" width="1.8170%" height="15" fill="rgb(250,105,47)" fg:x="5978" fg:w="112"/><text x="97.2325%" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (112 samples, 1.82%)</title><rect x="96.9825%" y="244" width="1.8170%" height="15" fill="rgb(230,72,3)" fg:x="5978" fg:w="112"/><text x="97.2325%" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (112 samples, 1.82%)</title><rect x="96.9825%" y="260" width="1.8170%" height="15" fill="rgb(232,218,39)" fg:x="5978" fg:w="112"/><text x="97.2325%" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (112 samples, 1.82%)</title><rect x="96.9825%" y="276" width="1.8170%" height="15" fill="rgb(248,166,6)" fg:x="5978" fg:w="112"/><text x="97.2325%" y="286.50">_..</text></g><g><title>&lt;module&gt; (pymc/gp/__init__.py:17) (112 samples, 1.82%)</title><rect x="96.9825%" y="292" width="1.8170%" height="15" fill="rgb(247,89,20)" fg:x="5978" fg:w="112"/><text x="97.2325%" y="302.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (112 samples, 1.82%)</title><rect x="96.9825%" y="308" width="1.8170%" height="15" fill="rgb(248,130,54)" fg:x="5978" fg:w="112"/><text x="97.2325%" y="318.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (112 samples, 1.82%)</title><rect x="96.9825%" y="324" width="1.8170%" height="15" fill="rgb(234,196,4)" fg:x="5978" fg:w="112"/><text x="97.2325%" y="334.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (112 samples, 1.82%)</title><rect x="96.9825%" y="340" width="1.8170%" height="15" fill="rgb(250,143,31)" fg:x="5978" fg:w="112"/><text x="97.2325%" y="350.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (112 samples, 1.82%)</title><rect x="96.9825%" y="356" width="1.8170%" height="15" fill="rgb(211,110,34)" fg:x="5978" fg:w="112"/><text x="97.2325%" y="366.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (112 samples, 1.82%)</title><rect x="96.9825%" y="372" width="1.8170%" height="15" fill="rgb(215,124,48)" fg:x="5978" fg:w="112"/><text x="97.2325%" y="382.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (112 samples, 1.82%)</title><rect x="96.9825%" y="388" width="1.8170%" height="15" fill="rgb(216,46,13)" fg:x="5978" fg:w="112"/><text x="97.2325%" y="398.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (112 samples, 1.82%)</title><rect x="96.9825%" y="404" width="1.8170%" height="15" fill="rgb(205,184,25)" fg:x="5978" fg:w="112"/><text x="97.2325%" y="414.50">_..</text></g><g><title>&lt;module&gt; (bart_examples.py:5) (160 samples, 2.60%)</title><rect x="96.2362%" y="68" width="2.5957%" height="15" fill="rgb(228,1,10)" fg:x="5932" fg:w="160"/><text x="96.4862%" y="78.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (160 samples, 2.60%)</title><rect x="96.2362%" y="84" width="2.5957%" height="15" fill="rgb(213,116,27)" fg:x="5932" fg:w="160"/><text x="96.4862%" y="94.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (160 samples, 2.60%)</title><rect x="96.2362%" y="100" width="2.5957%" height="15" fill="rgb(241,95,50)" fg:x="5932" fg:w="160"/><text x="96.4862%" y="110.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (160 samples, 2.60%)</title><rect x="96.2362%" y="116" width="2.5957%" height="15" fill="rgb(238,48,32)" fg:x="5932" fg:w="160"/><text x="96.4862%" y="126.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (160 samples, 2.60%)</title><rect x="96.2362%" y="132" width="2.5957%" height="15" fill="rgb(235,113,49)" fg:x="5932" fg:w="160"/><text x="96.4862%" y="142.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (160 samples, 2.60%)</title><rect x="96.2362%" y="148" width="2.5957%" height="15" fill="rgb(205,127,43)" fg:x="5932" fg:w="160"/><text x="96.4862%" y="158.50">_c..</text></g><g><title>_write_buffer (rich/console.py:2088) (44 samples, 0.71%)</title><rect x="98.9779%" y="180" width="0.7138%" height="15" fill="rgb(250,162,2)" fg:x="6101" fg:w="44"/><text x="99.2279%" y="190.50"></text></g><g><title>refresh (rich/live.py:241) (54 samples, 0.88%)</title><rect x="98.9293%" y="116" width="0.8761%" height="15" fill="rgb(220,13,41)" fg:x="6098" fg:w="54"/><text x="99.1793%" y="126.50"></text></g><g><title>__exit__ (rich/console.py:864) (54 samples, 0.88%)</title><rect x="98.9293%" y="132" width="0.8761%" height="15" fill="rgb(249,221,25)" fg:x="6098" fg:w="54"/><text x="99.1793%" y="142.50"></text></g><g><title>_exit_buffer (rich/console.py:822) (53 samples, 0.86%)</title><rect x="98.9455%" y="148" width="0.8598%" height="15" fill="rgb(215,208,19)" fg:x="6099" fg:w="53"/><text x="99.1955%" y="158.50"></text></g><g><title>_check_buffer (rich/console.py:2019) (52 samples, 0.84%)</title><rect x="98.9617%" y="164" width="0.8436%" height="15" fill="rgb(236,175,2)" fg:x="6100" fg:w="52"/><text x="99.2117%" y="174.50"></text></g><g><title>_write_buffer (rich/console.py:2094) (7 samples, 0.11%)</title><rect x="99.6918%" y="180" width="0.1136%" height="15" fill="rgb(241,52,2)" fg:x="6145" fg:w="7"/><text x="99.9418%" y="190.50"></text></g><g><title>all (6,164 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(248,140,14)" fg:x="0" fg:w="6164"/><text x="0.2500%" y="62.50"></text></g><g><title>_bootstrap (threading.py:1030) (71 samples, 1.15%)</title><rect x="98.8482%" y="68" width="1.1518%" height="15" fill="rgb(253,22,42)" fg:x="6093" fg:w="71"/><text x="99.0982%" y="78.50"></text></g><g><title>_bootstrap_inner (threading.py:1073) (71 samples, 1.15%)</title><rect x="98.8482%" y="84" width="1.1518%" height="15" fill="rgb(234,61,47)" fg:x="6093" fg:w="71"/><text x="99.0982%" y="94.50"></text></g><g><title>run (rich/live.py:32) (71 samples, 1.15%)</title><rect x="98.8482%" y="100" width="1.1518%" height="15" fill="rgb(208,226,15)" fg:x="6093" fg:w="71"/><text x="99.0982%" y="110.50"></text></g><g><title>refresh (rich/live.py:242) (12 samples, 0.19%)</title><rect x="99.8053%" y="116" width="0.1947%" height="15" fill="rgb(217,221,4)" fg:x="6152" fg:w="12"/><text x="100.0553%" y="126.50"></text></g></svg></svg>